{
  
    
        "post0": {
            "title": "Trimester Review",
            "content": "Overall Reflection . Overall, this class taught me a good amount for my very first computer science class. Not taking CSP, I was nervous and unsure about how to deal with the content in this class, but it was for the most part fairly straight forward. There were times that I could not for the life of me figure out how to do something, and most of the time the solution was really simple. I found myself overlooking many aspects of code and github features in general. While there was a great deal of frustration involved, I would say this class strengthened my ability to learn things on my own and to figure out any problems I had using just google and messing around with the code. This class covered six of the ten college board units, as well as content regarding project based learning. . Project Based Learning . Project based learning is where I would say I struggled the most in this class. With java and just plain old code, I could google things I didn&#39;t know the answers to. With project development, it was much harder in my very little experience. There was a lot to understand in developing websites and how to use and integrate databases and APIs into my websites. Beyond just web development, I think this trimester&#39;s PBL rly helped extend to other aspects of code development in terms of working with teams and employing similar concepts to other applications. . Github and Fastpages . Utilizing VSCode to work with Github and Fastpages website was really beneficial to my understanding of the content in this class. They were always really easy to use, and flowed well together. Apart from the wait times and some commits gone wrong, I typically found no issues with these servers. Furthermore, fastpages has been used by many people for a long time, so there were plenty of articles online to help me with anything I didn&#39;t understand. . AWS . Learning AWS enough to use it was a nightmare at first. It still is since many of the files and settings for the aws server wasn&#39;t created by me or a teammate. However, it was enough to know how docker creates an image of the code base from a github repo and then runs it on AWS&#39;s local machine before finally being managed by nginx as a web url. I also gained a better understanding of how to use linux commands and terminal in general. . HTML and JavaScript . HTML work for me was a nightmare. I had even less knowledge about it than I did with java going in, which was already close to nothing. However, while not a major focus of the class, it was still a crucial feature to develop our website and make our project function as intended. I still need to learn a lot more about HTML and JavaScript, so that will be one of my goals for the next to trimesters I have in this class . Focus and Habits . While not really a major part of project development, the content covered in that video covers a major part of life in general. It was nice to take a step back from the code code code to really hear what someone from yale had to say about emotional health. While a lot of it might seem obvious, I found it really eye-opening to hear how the brain kind of works in general. Furthermore, I feel that it is important to use what we learned about bettering our lives to better our coding lives and become successful computer scientists. . Agile . One of the things we learned was the agile programming philosophy. Overall, it helped establish how to delegate tasks to other teammates and develop my ability to communicate and accomplish tasks with my teammates. I would say in order to be successful in almost anything in life, including CS, you need to be able to communicate with others. After all, google is only going to take you so far. If you can&#39;t communicate and work well with others, you are not going to be able to learn much and work successfully. . College Board Homework Units 1 - 6 . Unit 1: Primitives . Unit 1 Link . 2006 FRQ hi | Problem 2a | . A set of classes is used to represent various items that are available for purchase. Items are either taxable or nontaxable. The purchase price of a taxable item is computed from its list price and its tax rate. The purchase price of a nontaxable item is simply its list price. Part of the class hierarchy is shown in the diagram below. . *Diagram not shown The definitions of the Item interface and the TaxableItem class are shown below . public abstract class TaxableItem implements item { private double taxRate; public abstract double getListPrice(); public TaxableItem(double rate) { taxRate = rate; } // returns the price of the item including the tax public double purchasePrice() { /* to be implemented in part (a) */} } . Write the TaxableItem method purchasePrice. The purchase price of a TaxableItem is its list price plus the tax on the item. The tax is computed by multiplying the list price by the tax rate. For example, if the tax rate is 0.10 (representing 10%), the purchase price of an item with a list price of 7.15. Complete method purchasePrice below. . // returns the price of the item including the tax public double purchasePrice(){ double price = 1.1 * getListPrice(); return price; } . Problem 3a | . Consider the following incomplete class that stores information about a customer, which includes a name and unique ID (a positive integer). To facilitate sorting, customers are ordered alphabetically by name. If two or more customers have the same name, they are further ordered by ID number. A particular customer is &quot;greater than&quot; another customer if that particular customer appears later in the ordering than the other customer. . public class Customer { //constructs a Customer with a given name and ID number public Customer(String name, int idNum) { /* implementation not shown */} //returns the customer&#39;s name public String getName () { /* implementation not shown */} // returns 0 when this customer is equal to other; // a positive integer when this customer is greater than other; // a negative integer when this customer is less than other; public int compareCustomer(Customer other) { /* to be implemented in part (a) */ } // There may be fields, constructors, and methods that are not shown. } . Write the Customer method compareCustomer, which compares this customer to a given customer, other. Customers are ordered alphabetically by name, using the compareTo method of the String class. If the names of the two customers are the same, then the customers are ordered by ID number. Method compareCustomer should return a positive integer if this customer is greater than other, a negative integer if this customer is less than other, and 0 if they are the same. . public int compareCustomer(Customer other){ int nameCompare = this.getName().compareTo(other.getName()); if(nameCompare == 0){ return this.getID() - other.getID(); } else{ return nameCompare; } } . Unit 2: Objects . Unit 2 Link . public class Goblin { private String name; private int HP; private int DMG; private double hitChance; private double criticalHitChance; public String getName() { return name; } public int getHP() { return HP; } public int getDMG() { return DMG; } public double getHitChance() { return hitChance; } public double getCriticalHitChance(){ return criticalHitChance; } public boolean isAlive() { if (this.HP &gt; 0) { return true; } else { return false; } } public void setName(String newName) { this.name = newName; } public void setHP(int newHP) { this.HP = newHP; } public void takeDMG(int takenDamage) { this.HP -= takenDamage; } public void setDMG(int newDMG) { this.DMG = newDMG; } public void setHitChance(double newHitChance) { this.hitChance = newHitChance; } public void setCriticalHitChance(double newCriticalHitChance) { this.criticalHitChance = newCriticalHitChance; } } . import java.lang.Math; public class Duel { public static void attack(Goblin attackerGoblin, Goblin attackeeGoblin) { System.out.println(attackerGoblin.getName() + &quot; attacks &quot; + attackeeGoblin.getName() + &quot;!&quot;); if (Math.random() &lt; attackerGoblin.getHitChance()) { if (Math.random() &lt; attackerGoblin.getCriticalHitChance()){ attackeeGoblin.takeDMG(2*attackerGoblin.getDMG()); System.out.println(attackerGoblin.getName() + &quot; lands a critical hit!&quot;); System.out.println(attackeeGoblin.getName() + &quot; takes &quot; + 2*attackerGoblin.getDMG() + &quot; damage&quot;); } else{ attackeeGoblin.takeDMG(attackerGoblin.getDMG()); System.out.println(attackerGoblin.getName() + &quot; hits!&quot;); System.out.println(attackeeGoblin.getName() + &quot; takes &quot; + attackerGoblin.getDMG() + &quot; damage&quot;); } } else { System.out.println(attackerGoblin.getName() + &quot; misses...&quot;); } System.out.println(attackeeGoblin.getName() + &quot; HP: &quot; + attackeeGoblin.getHP()); System.out.println(); } public static void fight(Goblin goblin1, Goblin goblin2) { while (goblin1.isAlive() &amp;&amp; goblin2.isAlive()) { attack(goblin1, goblin2); if (!goblin1.isAlive()) { System.out.println(goblin1.getName() + &quot; has perished&quot;); break; } attack(goblin2, goblin1); if (!goblin2.isAlive()) { System.out.println(goblin2.getName() + &quot; has perished&quot;); break; } } } public static void main(String[] args) { Goblin goblin1 = new Goblin(); goblin1.setName(&quot;jeffrey&quot;); goblin1.setHP(12); goblin1.setDMG(2); goblin1.setHitChance(0.50); goblin1.setCriticalHitChance(0.1); Goblin goblin2 = new Goblin(); goblin2.setName(&quot;Gunther the great&quot;); goblin2.setHP(4); goblin2.setDMG(1); goblin2.setHitChance(1); goblin1.setCriticalHitChance(0.5); fight(goblin1, goblin2); } } Duel.main(null); . jeffrey attacks Gunther the great! jeffrey misses... Gunther the great HP: 4 Gunther the great attacks jeffrey! Gunther the great hits! jeffrey takes 1 damage jeffrey HP: 11 jeffrey attacks Gunther the great! jeffrey misses... Gunther the great HP: 4 Gunther the great attacks jeffrey! Gunther the great hits! jeffrey takes 1 damage jeffrey HP: 10 jeffrey attacks Gunther the great! jeffrey misses... Gunther the great HP: 4 Gunther the great attacks jeffrey! Gunther the great hits! jeffrey takes 1 damage jeffrey HP: 9 jeffrey attacks Gunther the great! jeffrey lands a critical hit! Gunther the great takes 4 damage Gunther the great HP: 0 Gunther the great attacks jeffrey! Gunther the great hits! jeffrey takes 1 damage jeffrey HP: 8 Gunther the great has perished . Unit 3: Booleans . Unit 3 Link . 2009 FRQ 3b | . An electric car that runs on batteries must be periodically recharged for a certain number of hours. The battery technology in the car requires that the charge time not be interrupted. . The cost for charging is based on the hour(s) during which the charging occurs. A rate table lists the 24 one-hour periods, numbered from 0 to 23, and the corresponding hourly cost for each period. The same rate table is used for each day. Each hourly cost is a positive integer. . The class BatteryCharger below uses a rate table to determine the most economic time to charge the battery. You will write two of the methods for the BatteryCharger class. . public class BatteryCharger { /** rateTable has 24 entries representing the charging costs for hours 0 through 23. */ private int[] rateTable; /** Determines the total cost to charge the battery starting at the beginning of startHour. * @param startHour the hour at which the charge period begins * Precondition: 0 ≤ startHour ≤ 23 * @param chargeTime the number of hours the battery needs to be charged * Precondition: chargeTime &gt; 0 * @return the total cost to charge the battery */ private int getChargingCost(int startHour, int chargeTime) { /* to be implemented in part (a) */ } /** Determines start time to charge the battery at the lowest cost for the given charge time. * @param chargeTime the number of hours the battery needs to be charged * Precondition: chargeTime &gt; 0 * @return an optimal start time, with 0 ≤ returned value ≤ 23 */ public int getChargeStartTime(int chargeTime) { /* to be implemented in part (b) */ } // There may be instance variables, constructors, and methods that are not shown. } . (b) Write the BatteryCharger method getChargeStartTime that returns the start time that will allow the battery to be charged at minimal cost. If there is more than one possible start time that produces the minimal cost, any of those start times can be returned. . Assume that getChargingCost works as specified, regardless of what you wrote in part (a). Complete method getChargeStartTime below. . /** Determines start time to charge the battery at the lowest cost for the given charge time. * @param chargeTime the number of hours the battery needs to be charged * Precondition: chargeTime &gt; 0 * @return an optimal start time, with 0 ≤ returned value ≤ 23 */ public int getChargeStartTime(int chargeTime) . { int startTime = 0; for (int i = 1; i &lt; 24; i++) { if (this.getChargingCost(i, chargeTime) &lt; this.getChargingCost(startTime, chargeTime)) { startTime = i; } } return startTime; } . 2017 FRQ 1b | . This question involves identifying and processing the digits of a non-negative integer. The declaration of the Digits class is shown below. You will write the constructor and one method for the Digits class. . public class Digits { /** The list of digits from the number used to construct this object. * The digits appear in the list in the same order in which they appear in the original number. */ private ArrayList&lt;Integer&gt; digitList; /** Constructs a Digits object that represents num. * Precondition: num &gt;= 0 */ public Digits(int num) { /* to be implemented in part (a) */ } /** Returns true if the digits in this Digits object are in strictly increasing order; * false otherwise. */ public boolean isStrictlyIncreasing() { /* to be implemented in part (b) */ } } . (b) Write the Digits method isStrictlyIncreasing. The method returns true if the elements of digitList appear in strictly increasing order; otherwise, it returns false. A list is considered strictly increasing if each element after the first is greater than (but not equal to) the preceding element. . Complete method isStrictlyIncreasing below. . /** Returns true if the digits in this Digits object are in strictly increasing order; * false otherwise. */ public boolean isStrictlyIncreasing() . public boolean isStrictlyIncreasing() { for (int i = 0; i &lt; digitList.size()-1; i++) { if (digitList.get(i).intValue() &gt; digitList.get(i-1).intValue()) { return true; } } return false; } . 2019 FRQ 3b | . Many encoded strings contain delimiters. A delimiter is a non-empty string that acts as a boundary between different parts of a larger string. The delimiters involved in this question occur in pairs that must be balanced, with each pair having an open delimiter and a close delimiter. There will be only one type of delimiter for each string. . In this question, you will write two methods in the following Delimiters class. . public class Delimiters { /** The open and close delimiters. */ private String openDel; private String closeDel; /** Constructs a Delimiters object where open is the open delimiter and close is the * close delimiter. * Precondition: open and close are non-empty strings. */ public Delimiters(String open, String close) { openDel = open; closeDel = close; } /** Returns an ArrayList of delimiters from the array tokens, as described in part (a). */ public ArrayList&lt;String&gt; getDelimitersList(String[] tokens) { /* to be implemented in part (a) */ } /** Returns true if the delimiters are balanced and false otherwise, as described in part (b). * Precondition: delimiters contains only valid open and close delimiters. */ public boolean isBalanced(ArrayList&lt;String&gt; delimiters) { /* to be implemented in part (b) */ } // There may be instance variables, constructors, and methods that are not shown. } . (b) Write the method isBalanced, which returns true when the delimiters are balanced and returns false otherwise. The delimiters are balanced when both of the following conditions are satisfied otherwise, they are not balanced. . 1. When traversing the ArrayList from the first element to the last element, there is no point at which there are more close delimiters than open delimiters at or before that point. 2. The total number of open delimiters is equal to the total number of close delimiters. . Consider a Delimiters object for which openDel is &quot;&quot; and closeDel is &quot;&quot;. . Class information for this question: . public class Delimiters | private String openDel | private String closeDel | public Delimiters(String open, String close) | public ArrayList getDelimitersList(String[] tokens)&lt;/li&gt; public boolean isBalanced(ArrayList delimiters)&lt;/li&gt; &lt;/ul&gt; Complete method isBalanced below. . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; /** Returns true if the delimiters are balanced and false otherwise, as described in part (b). * Precondition: delimiters contains only valid open and close delimiters. */ public boolean isBalanced(ArrayList&lt;String&gt; delimiters) . public boolean isBalanced(ArrayList&lt;String&gt; delimiters) { int openCount = 0; int closeCount = 0; for (String str : delimiters) { if (str.equals(openDel)) { openCount++; } else { closeCount++; } if (closeCount &gt; openCount) { return false; } } if (openCount == closeCount) { return true; } else { return false; } } . Unit 4: Iteration . Unit 4 Link . Write a program where a random number is generated. Then the user tries to guess the number. If they guess too high display something to let them know, and same for if they guess a number that is too low. The loop must iterate until the number is guessed correctly. | . Random Number Generator: . import java.util.Scanner; public class GuessingGame { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); double a = (1 + Math.random() * 100); int b = ((int) Math.floor(a)); Integer c = 0; System.out.println(&quot;What is the number?&quot;); c = scanner.nextInt(); while (!c.equals(b)) { System.out.println( c + &quot; was not the number&quot;); if (c &gt; b) { System.out.println(&quot;lower n&quot;); } if (c &lt; b) { System.out.println(&quot;higher n&quot;); } c = scanner.nextInt(); } if (c == b) { System.out.println(&quot;You guessed it! The number was &quot; + b); } } } GuessingGame.main(null); . What is the number? 50 was not the number lower 25 was not the number higher 35 was not the number higher 40 was not the number lower 37 was not the number lower You guessed it! The number was 36 . Complete the Homework Quiz: | . for (int i = 3; i &lt;= 12; i++) { System.out.print(i + &quot; &quot;); } . 3 4 5 6 7 8 9 10 11 12 . for (int i = 3; i &lt; 9; i++) { System.out.print(&quot;*&quot;); } . ****** . int x = 3; while (x &lt; 9) { System.out.print(x + &quot; &quot;); } //I am NOT displaying this infinite loop . . Unit 5: Writing Classes . ** No Homework, as this was our presentation . Unit 6: Arrays . Unit 6 Link . Write a class called ArrayMethods that contains two methods that utilize/manipulate an array. You may choose 2 of the 4 options below to complete. Extra credit for doing all 4 options. Make sure to show test cases for all of the options you choose. . Options for hacks (Pick two): . Swap the first and last element in the array | Replace all even elements with 0 | Return true if the array is currently sorted in increasing order | Return true if the array contains duplicate elements | . public class ArrayMethods { private int[] values = {0, 1, 2, 3}; public void printElements() { for(int i = 0; i &lt; values.length; i++){ System.out.println(values[i]); } } public void swapElements() { int last = values[values.length-1]; values[values.length-1] = values[0]; values[0] = last; } public void evenToZero() { for(int i = 0; i &lt; values.length; i++) { if (values[i] % 2 == 0){ values[i] = 0; } } } public static void main(String[] args) { System.out.println(&quot;First and Last Element Swap: &quot;); ArrayMethods swapElements = new ArrayMethods(); swapElements.swapElements(); swapElements.printElements(); System.out.println(&quot;Replacing All Elements w/ Zero: &quot;); ArrayMethods evenToZero = new ArrayMethods(); swapElements.evenToZero(); swapElements.printElements(); } } ArrayMethods.main(null); . First and Last Element Swap: 3 1 2 0 Replacing All Elements w/ Zero: 3 1 0 0 . &lt;/div&gt; | | .",
            "url": "https://nicholasramos5.github.io/VSCodings/college%20board/java/2022/11/09/Tri1_Reflection.html",
            "relUrl": "/college%20board/java/2022/11/09/Tri1_Reflection.html",
            "date": " • Nov 9, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "2014 Practice Exam MCQ",
            "content": "Final Score . I scored a 33/40 on the MC college board test. I typically did better at problems involving mathematical computation, regarding loops, compound boolean expression, array list methods . The questions I got wrong involved recursion, developing algorithms using arrays, arrays, and while loops. . . Corrections . Question 10 . My Answer: I and II only . Correct Answer: II only . Explanation: . Choice I will return the correct value if the element in the array with one element was target. In this case, with the first call to seqSearchRecHelper the value of data[0] would be target and 0 would be returned. . Choice I will return the correct value if the element in the array with one element was target. In this case, with the first call to seqSearchRecHelper the value of data[0] would be target and 0 would be returned. Choice II will eventually cause an ArrayIndexOutOfBoundsException to be thrown when the recursive call is made with target and -1. This will happen after every valid index in data has been examined. During this call, data[-1] is out of bounds. Choice III will correctly return the index of the element closest to the end of the array with the value target, since data[last] == target will be true at some valid index value of last. . Question 11 . My Answer: if (last &lt;= 0) return -1; . Correct Answer: if (last &lt; 0) return -1; . Explanation: . This will prevent an ArrayIndexOutOfBoundsException from being thrown if target does not appear in data, however if target is at element 0, -1 will be returned instead of 0 as intended. . The seqSearchRecHelper recursive method does not work as intended when target does not appear in data. In this case, when last becomes -1, the method will throw an ArrayIndexOutOfBoundsException in the first if statement after line 1. To prevent this, we should add a check to see if last is less than 0 and if it is, return -1 as expected. . My issue with problems 10 and 11 (which were connected) is that I was not familiar with how recursion works. I did not realize that with recursion, it travels down and then back up the granted call stack. This confused me, but I watched a a lesson on topic 10.1 (skill 5.A) to heighten my knowledge . Question 16 . My Answer: k + a1.length + 1 . Correct Answer: k + a1.length . Explanation: . This will cause the value of result[a1.length] to remain 0,the default initial value for elements in an array of type int. Additionally, when k has the value a2.length – 1, the program will attempt to access the element result[a2.length – 1 + a1.length + 1] or result[a2.length + a1.length] and an ArrayIndexOutOfBoundsException will be thrown. . In the first for loop, all the values from a1 are copied over to result at corresponding indices. At this point, the elements at index 0 through a1.length – 1 are full. The first index where the first element of a2 should be copied into is a1.length. We can use the loop control variable k to access all the elements in a2 and k + a1.length to access the corresponding elements in result. . The first for loop runs until j is equal to the value of a1.length. This means the result has no value (or the value 0) at a1.length. The next value in the new array would have to be a1.length, as that occurs in the next for loop, when k = 0. Therefore, the missing index should be k + a1.length, as adding 1 would leave an empty space in result. . Question 20 . My Answer: The array nums is unchanged. . Correct Answer: The contents of the array nums are reversed. . Explanation: . Since the while loop terminates when j is greater than or equal to k, the first half of the elements in nums are swapped with the second half of the elements in nums. If the while condition was changed to j &lt; nums.length, then all the elements would be swapped and then swapped back to their original location and nums would be unchanged. . The variable j starts with the value 0, which is the index of the left most element in nums. The variable k starts with the value nums.length – 1, which is the index of the right most element in nums. As long as j is less than k, x is assigned the value of nums[j], this ensures that the value of nums[j] is not lost when nums[j] is assigned the value of nums[k]. Then nums[k] is assigned the value of x. This algorithm swaps the values of nums[j] and nums[k]. Then j is incremented and k is decremented, ensuring that the contents of the array nums are reversed at the conclusion of the arrayMethod method. . For this problem, I did not understand what was going on with the assigning of each variable. After careful consideration, it now makes sense to me that the values of nums[j] and nums[k] are switched. This is because arrayMethod sets x to be assigned as the value of nums[j], sets nums[j] to be assigned the value of nums[k], and sets nums[k] to be assigned the value of x. . Question 24 . My Answer: 4 . Correct Answer: 7 . Explanation: . The row and column indices for 2D arrays start at 0. The value 4 is at newArray[0][1]. . The enhanced for loop iterates over the array oldArray. In the first iteration, newArray[0][0] is assigned the value 1. The value of row is incremented to 1. Since 1 % 3 does not equal 0, the statements in the if are not executed. In the next iteration, newArray[1][0] is assigned the value 2. The value of row is incremented to 2. The algorithm continues to fill column 0 with the subsequent values of oldArray. Once row is 3, the if condition is true and row is assigned 0 and col is incremented to 1. The algorithm proceeds to fill column 1. When the for loop terminates, newArray contains the following values { {1, 4, 7}, {2, 5, 8}, {3, 6, 9} }. The value of newArray[0][2] is 7. . For this problem, I did not really understand how the 2d array was functioning. Only after seeing the answer, I understood that the new array was being printed by column, with row increasing each time. Once the row number was a factor of 3, the column increased by one and row was reset back to zero. (newArray [0] [2]) represents the value in row zero, column 2. . Question 28 . My Answer: n will sometimes be greater than 2 at // Point C. . Correct Answer: n will always be greater than 2 at // Point B. . Explanation: . At //Point C, n will be 2 or less, since when n is greater than 2, the while loop iterates decrementing n until it has the value 2. . The while loop only iterates while n is greater than 2 and //Point B is in the body of the while loop prior to any change to the value of n. At this point, n will always be greater than 2. . My mistake came from my misunderstanding of while loops. While it seems obvious, I overlooked that the while loop iterates repeatedly as long as the condition is met. Because point c is outside and after the while loop, point c will only receive n values that do not meet the while loop condition. Because point b is inside the while loop, it will only receive n values that meet the condition of the while loop. . Question 39 . My Answer: 18 . Correct Answer: 16 . Explanation: . The value of recur(9) is 18. However, this call was made within another recursive call and is not the final return value. . The call recur(27) returns the value of recur(recur(9)) since 27 is greater than 10. The call recur(9) returns 18, since 9 is less than or equal to 10. Therefore, recur(recur(9)) is recur(18). The call recur(18) returns recur(recur(6)) since 18 is greater than 10. The call recur(6) returns 12, since 6 is less than or equal to 10. Therefore, recur(recur(6)) is recur(12). The call recur(12) returns recur(recur(4)) since 12 is greater than 10. The call recur(4) returns 8, since 4 is less than or equal to 10. Therefore, recur(recur(4)) is recur(8). The call recur(8) returns 16, since 8 is less than or equal to 10. Therefore, recur(27)returns the value of 16. . My error here was that I failed to recognize the double recur, which takes the output of 18 and then recurs it once again, making 18 not the final output. I failed to realize that &#39;recur recur (n/3)&#39; takes the output of &#39;recur (n/3)&#39; and plugs it back into the recur value. . Other Takeaways . While taking the college board mcq, I found myself wondering what the difference between .length and .size were. I learned that .length provides the length of an array or array object, which is the total space allocated in memory during the initialization of the array. .size, on the other hand, provides the total number of objects in the collection of an arraylist, which has no length property to provide. I also learned that both .length and .size start counting at 1, rather than the zero. .",
            "url": "https://nicholasramos5.github.io/VSCodings/college%20board/java/2022/11/09/MCQ_Reflection.html",
            "relUrl": "/college%20board/java/2022/11/09/MCQ_Reflection.html",
            "date": " • Nov 9, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Hello",
            "content": "",
            "url": "https://nicholasramos5.github.io/VSCodings/college%20board/java/2022/11/08/hello.html",
            "relUrl": "/college%20board/java/2022/11/08/hello.html",
            "date": " • Nov 8, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Unit 7 - ArrayLists",
            "content": "",
            "url": "https://nicholasramos5.github.io/VSCodings/college%20board/java/2022/10/27/Unit7-ArrayLists.html",
            "relUrl": "/college%20board/java/2022/10/27/Unit7-ArrayLists.html",
            "date": " • Oct 27, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Unit 6 - Arrays",
            "content": "AP Classroom Requirements 3.D - Write program code to create, traverse, and manipulate elements in 1D array or ArrayList objects. . 6.1 - Array Creation and Access | 6.2 - Traversing Arrays | 6.3 - Enhanced for Loop for Arrays | 6.4 - Developing Algorithms Using Arrays | . Primitive or Referenced? . Primitive = single variable type (int, char, float) Reference = several variable type () . array syntax . declare an array variable, it&#39;s not initialized -- by default, each element in the array is value 0 | . Common errors: --bound errors: when you access an array value that does not exist . --uninitialized and unfilled arrays . traverse an array: --accessing the values inside of it --can use any sort of iteration or loop -recommend for loops, but while loops and recursion also work . Enhanced for loops . Developing algorithms using arrays --minium, maximums, sums, manipulating each element . array.length array[i] . Declaring Arrays . Two types, arrays and ArrayLists Primitive data types contain a single var type (int, charm float) Referenced (string array classes) . Array Syntax . int[] array = new int[10]; . Traverse and Array . Main way is For loops where you go through each element of the array (enhanced or basic) Basic For loop is For when you know number of elements . public class ArrayMethods { private int[] values = {1, 2, 3, 4, 5}; for (int ) } . // Write array methods for the Array Methods class below out of the options given above. public class ArrayMethods { private int[] values = {1, 2, 3, 4, 5, 6, 7, 8, 9}; { int i; for(i = 0; i &lt; values.length; i ++);{ if (values[i] &lt; values[i+1]) { return true; } else { return false; } } } } . Homework . Write a class called ArrayMethods that contains two methods that utilize/manipulate an array. You may choose 2 of the 4 options below to complete. Extra credit for doing all 4 options. Make sure to show test cases for all of the options you choose. . Options for hacks (Pick two): . Swap the first and last element in the array | Replace all even elements with 0 | Return true if the array is currently sorted in increasing order | Return true if the array contains duplicate elements | . public class ArrayMethods { private int[] values = {0, 1, 2, 3}; public void printElements() { for(int i = 0; i &lt; values.length; i++){ System.out.println(values[i]); } } public void swapElements() { int last = values[values.length-1]; values[values.length-1] = values[0]; values[0] = last; } public void evenToZero() { for(int i = 0; i &lt; values.length; i++) { if (values[i] % 2 == 0){ values[i] = 0; } } } public static void main(String[] args) { System.out.println(&quot;First and Last Element Swap: &quot;); ArrayMethods swapElements = new ArrayMethods(); swapElements.swapElements(); swapElements.printElements(); System.out.println(&quot;Replacing All Elements w/ Zero: &quot;); ArrayMethods evenToZero = new ArrayMethods(); swapElements.evenToZero(); swapElements.printElements(); } } ArrayMethods.main(null); . First and Last Element Swap: 3 1 2 0 Replacing All Elements w/ Zero: 3 1 0 0 .",
            "url": "https://nicholasramos5.github.io/VSCodings/college%20board/java/2022/10/25/Unit6-Arrays.html",
            "relUrl": "/college%20board/java/2022/10/25/Unit6-Arrays.html",
            "date": " • Oct 25, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Title",
            "content": "Describe the technical systems and processes used to ensure the ability to do continuous updates and integration of software. . Describe software and programming tools Identify authoring tools (IDE’s, Docker, GitHub) used Describe and/or show visuals of interactions and integration of programming languages, protocols, and data within project. For instance, deployed systems of Docker Images, Nginx, DNS hosting the application. Describe and/or illustrate key Web Applications, APIs, and dependency systems that will be required to complete this system (Diagram). Describe GitHub branch management and sociology used to ensure ability to perform continuous builds and integrations. GitHub projects Branching Strategies Deployment processes and automation Describe how to validate and test the complete system plus . Docker enables you to separate your applications from your infrastructure so you can deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your applications. . GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere. . Hello, im nicholas and I am the development operations engineer of this team. We are using Visual studio code as our IDE, which helps us immensely in developing code easily and efficiently. We also utilize docker, which allows us to carry out our code relatively quickly, and gives us less down time when working on projects. Github helps us collaborate as a team, see other projects, and organize our work into one area. . merge requests, pull requests, commits . ports are entry of access, this is where it sends and receives information = . my job: deployment and development . backend and frontend --backend = logic and data processing . we want to separate the two to develop them independently, and it makes it easier for developers to work on different parts of our project without interferring with each other&#39;s work . because we split the two, we want our front end to communicate wiht the backend - we do that with an api- our frontend will call upon our backend through and api link -- for instance, one wau this happens is when we make a table for our roster list, we call upon the backend api to retunr the data base . we use github to manage our repositories, where we have separate repositories for front end and back end . talk about: controllers - the interface between our api&#39;s, which call upon the backend, communicate with html and backend (through controller) . We use docker to form an image of our web application, which is what we use to service on the internet and our dns. dnhsscioly . nginx puts our website onto the internet .",
            "url": "https://nicholasramos5.github.io/VSCodings/2022/10/24/Video.html",
            "relUrl": "/2022/10/24/Video.html",
            "date": " • Oct 24, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Unit 4 - Iteration",
            "content": "Iteration . is a pretty important topic . | A way to simply code that otherwise would be repeated many times . | Loops: While loops, For loops, Recursion . | each loop, you use an operator . ex: increment and decrement operator . | . While loops . while a condition is met, something will keep recurring | loop will stop when condition is no longer satisfied . | forever loops . | . For loop . a sequence that runs as long as a condition is met | stops when the condtion is no longer met . | similar to while loop, but difference = ??? . | Increment loops . | . Recursion loop . is placed in your own function, rather than creating its own function | restate the function | . Nested iteration . not a java method | technique used by coders to help simplify code | put a loop inside of a loop | can utilize any of the three mentioned loop types | . Do while loop . runs at least once initially no matter what | . For Loop Example . for (int i=0; i &lt;= 5 ; i++) { System.out.print(i + &quot; &quot;); } . 0 1 2 3 4 5 . While Loop Example . int i = 0; while (i &lt;= 5) { System.out.print(i + &quot; &quot;); i++; } . 0 1 2 3 4 5 . Recursion Loop Example . double a = (1 + Math.random() * 100); int b = ((int) Math.floor(a)); //generates a random double between 1 and 100 //makes that double into an integer double c = (1 + Math.random() * 100); int d = ((int) Math.floor(c)); if(b &gt; d) { System.out.println(b + &quot; is greater than &quot; + d); } else if(d &gt; b) { System.out.println(d + &quot; is greater than &quot; + b); } . 61 is greater than 25 . Nested Loop Example . public class Clock { public static void main(String[] args) { for(int hours = 0; hours &lt;= 2; hours++) { for (int minutes = 0; minutes &lt;= 2; minutes++) { for (int seconds = 0; seconds &lt;= 2; seconds++) { System.out.printf(&quot;%02d:%02d:%02d n&quot;, hours, minutes, seconds); } } } } } Clock.main(null); . 00:00:00 00:00:01 00:00:02 00:01:00 00:01:01 00:01:02 00:02:00 00:02:01 00:02:02 01:00:00 01:00:01 01:00:02 01:01:00 01:01:01 01:01:02 01:02:00 01:02:01 01:02:02 02:00:00 02:00:01 02:00:02 02:01:00 02:01:01 02:01:02 02:02:00 02:02:01 02:02:02 . import java.util.Scanner; public class Checker { public static void main(String[] args) { int number; // Create a Scanner object for keyboard input. Scanner keyboard = new Scanner(System.in); // Get a number from the user. System.out.print(&quot;Enter a number in the range of 1 through 100: n&quot;); number = keyboard.nextInt(); if (number &gt; 100) { System.out.println(&quot;Invalid input. Enter a number in the range &quot; + &quot;of 1 through 100: &quot;); number = keyboard.nextInt(); } else if (number &lt;= 100) { System.out.println(&quot;Your number is &quot; + number); } } } Checker.main(null); . Enter a number in the range of 1 through 100: Invalid input. Enter a number in the range of 1 through 100: . | Checker.main(null); Evaluation interrupted. . public class LoopConversion { public static void main(String[] args) { int count = 0; //convert to for loop while (count &lt; 5) { System.out.println(&quot;count is &quot; + count); count++; } } } LoopConversion.main(null); . count is 0 count is 1 count is 2 count is 3 count is 4 . Homework . Write a program where a random number is generated. Then the user tries to guess the number. If they guess too high display something to let them know, and same for if they guess a number that is too low. The loop must iterate until the number is guessed correctly. . | Complete the Homework Quiz: . | . Random Number Generator . import java.util.Scanner; public class GuessingGame { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); double a = (1 + Math.random() * 100); int b = ((int) Math.floor(a)); Integer c = 0; System.out.println(&quot;What is the number?&quot;); c = scanner.nextInt(); while (!c.equals(b)) { System.out.println( c + &quot; was not the number&quot;); if (c &gt; b) { System.out.println(&quot;lower n&quot;); } if (c &lt; b) { System.out.println(&quot;higher n&quot;); } c = scanner.nextInt(); } if (c == b) { System.out.println(&quot;You guessed it! The number was &quot; + b); } } } GuessingGame.main(null); . What is the number? 50 was not the number lower 25 was not the number higher 40 was not the number lower 30 was not the number higher 35 was not the number lower 33 was not the number lower 31 was not the number higher You guessed it! The number was 32 . Homework Quiz . for (int i = 3; i &lt;= 12; i++) { System.out.print(i + &quot; &quot;); } . 3 4 5 6 7 8 9 10 11 12 . for (int i = 3; i &lt; 9; i++) { System.out.print(&quot;*&quot;); } . ****** . int x = 3; while (x &lt; 9) { System.out.print(x + &quot; &quot;); } //I am NOT displaying this infinite loop . .",
            "url": "https://nicholasramos5.github.io/VSCodings/college%20board/java/2022/10/19/Unit4-Iteration.html",
            "relUrl": "/college%20board/java/2022/10/19/Unit4-Iteration.html",
            "date": " • Oct 19, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Unit 3 - Booleans",
            "content": "Booleans Expressions and If Statements . Importance of Unit 3 . The Collegeboard website states that this unit makes up 15%-17.5% of the AP test Almost all the FRQs and multiple choice will contain some kind of if-else statements as it allows for more complex code Switch case allows for if-else statements to be written more effeciently Booleans are required for many assignment and comparative logic functions Boolean allows a programmer to implement choice into their code . If, IfElse, IfElseIf, IfElseIfElse . Switch Statements . more efficient, control flow statement . Boolean Expressions: . Logical statement, either true or flase . compare two parts of data . most common example is numbers . -- less than, greater than, less than or equal to, greater than or equal to . can use other operators modulus function . *Cannot use booleans when comparing two string String objects can only be carried out with string methods . Logic Gates . De Morgan&#39;s Law . Truth Table . Homework . 2009 FRQ 3b | 2017 FRQ 1b | 2019 FRQ 3b | . 2009 FRQ 3b . An electric car that runs on batteries must be periodically recharged for a certain number of hours. The battery technology in the car requires that the charge time not be interrupted. . The cost for charging is based on the hour(s) during which the charging occurs. A rate table lists the 24 one-hour periods, numbered from 0 to 23, and the corresponding hourly cost for each period. The same rate table is used for each day. Each hourly cost is a positive integer. . The class BatteryCharger below uses a rate table to determine the most economic time to charge the battery. You will write two of the methods for the BatteryCharger class. . public class BatteryCharger { /** rateTable has 24 entries representing the charging costs for hours 0 through 23. */ private int[] rateTable; /** Determines the total cost to charge the battery starting at the beginning of startHour. * @param startHour the hour at which the charge period begins * Precondition: 0 ≤ startHour ≤ 23 * @param chargeTime the number of hours the battery needs to be charged * Precondition: chargeTime &gt; 0 * @return the total cost to charge the battery */ private int getChargingCost(int startHour, int chargeTime) { /* to be implemented in part (a) */ } /** Determines start time to charge the battery at the lowest cost for the given charge time. * @param chargeTime the number of hours the battery needs to be charged * Precondition: chargeTime &gt; 0 * @return an optimal start time, with 0 ≤ returned value ≤ 23 */ public int getChargeStartTime(int chargeTime) { /* to be implemented in part (b) */ } // There may be instance variables, constructors, and methods that are not shown. } . (b) Write the BatteryCharger method getChargeStartTime that returns the start time that will allow the battery to be charged at minimal cost. If there is more than one possible start time that produces the minimal cost, any of those start times can be returned. . Assume that getChargingCost works as specified, regardless of what you wrote in part (a). Complete method getChargeStartTime below. . /** Determines start time to charge the battery at the lowest cost for the given charge time. * @param chargeTime the number of hours the battery needs to be charged * Precondition: chargeTime &gt; 0 * @return an optimal start time, with 0 ≤ returned value ≤ 23 */ public int getChargeStartTime(int chargeTime) . { int startTime = 0; for (int i = 1; i &lt; 24; i++) { if (this.getChargingCost(i, chargeTime) &lt; this.getChargingCost(startTime, chargeTime)) { startTime = i; } } return startTime; } . 2017 FRQ 1b . This question involves identifying and processing the digits of a non-negative integer. The declaration of the Digits class is shown below. You will write the constructor and one method for the Digits class. . public class Digits { /** The list of digits from the number used to construct this object. * The digits appear in the list in the same order in which they appear in the original number. */ private ArrayList&lt;Integer&gt; digitList; /** Constructs a Digits object that represents num. * Precondition: num &gt;= 0 */ public Digits(int num) { /* to be implemented in part (a) */ } /** Returns true if the digits in this Digits object are in strictly increasing order; * false otherwise. */ public boolean isStrictlyIncreasing() { /* to be implemented in part (b) */ } } . (b) Write the Digits method isStrictlyIncreasing. The method returns true if the elements of digitList appear in strictly increasing order; otherwise, it returns false. A list is considered strictly increasing if each element after the first is greater than (but not equal to) the preceding element. . Complete method isStrictlyIncreasing below. . /** Returns true if the digits in this Digits object are in strictly increasing order; * false otherwise. */ public boolean isStrictlyIncreasing() . public boolean isStrictlyIncreasing() { for (int i = 0; i &lt; digitList.size()-1; i++) { if (digitList.get(i).intValue() &gt; digitList.get(i-1).intValue()) { return true; } } return false; } . 2019 FRQ 3b . Many encoded strings contain delimiters. A delimiter is a non-empty string that acts as a boundary between different parts of a larger string. The delimiters involved in this question occur in pairs that must be balanced, with each pair having an open delimiter and a close delimiter. There will be only one type of delimiter for each string. . In this question, you will write two methods in the following Delimiters class. . public class Delimiters { /** The open and close delimiters. */ private String openDel; private String closeDel; /** Constructs a Delimiters object where open is the open delimiter and close is the * close delimiter. * Precondition: open and close are non-empty strings. */ public Delimiters(String open, String close) { openDel = open; closeDel = close; } /** Returns an ArrayList of delimiters from the array tokens, as described in part (a). */ public ArrayList&lt;String&gt; getDelimitersList(String[] tokens) { /* to be implemented in part (a) */ } /** Returns true if the delimiters are balanced and false otherwise, as described in part (b). * Precondition: delimiters contains only valid open and close delimiters. */ public boolean isBalanced(ArrayList&lt;String&gt; delimiters) { /* to be implemented in part (b) */ } // There may be instance variables, constructors, and methods that are not shown. } . (b) Write the method isBalanced, which returns true when the delimiters are balanced and returns false otherwise. The delimiters are balanced when both of the following conditions are satisfied otherwise, they are not balanced. . 1. When traversing the ArrayList from the first element to the last element, there is no point at which there are more close delimiters than open delimiters at or before that point. 2. The total number of open delimiters is equal to the total number of close delimiters. . Consider a Delimiters object for which openDel is &quot;&quot; and closeDel is &quot;&quot;. . Class information for this question: . public class Delimiters | private String openDel | private String closeDel | public Delimiters(String open, String close) | public ArrayList getDelimitersList(String[] tokens)&lt;/li&gt; public boolean isBalanced(ArrayList delimiters)&lt;/li&gt; &lt;/ul&gt; Complete method isBalanced below. . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; /** Returns true if the delimiters are balanced and false otherwise, as described in part (b). * Precondition: delimiters contains only valid open and close delimiters. */ public boolean isBalanced(ArrayList&lt;String&gt; delimiters) . public boolean isBalanced(ArrayList&lt;String&gt; delimiters) { int openCount = 0; int closeCount = 0; for (String str : delimiters) { if (str.equals(openDel)) { openCount++; } else { closeCount++; } if (closeCount &gt; openCount) { return false; } } if (openCount == closeCount) { return true; } else { return false; } } . &lt;/div&gt; | | .",
            "url": "https://nicholasramos5.github.io/VSCodings/college%20board/java/2022/10/18/Unit3-Boolean.html",
            "relUrl": "/college%20board/java/2022/10/18/Unit3-Boolean.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Unit 2 - Using Objects",
            "content": "Object Oriented Programming . Programming paradigm around objects s | Compartmentalize data and function in such a way that data and the functions that operate on the data are bound together ## Classes | Classes are a template | Objects in the same class will share common methods and attributes | Fruit example ## Creating an Object | Members methods constructors | Initialized by calling the class constructor | Access modifier | Return type | Method name | Parameter list | Exception list | Method body | . Painter mypainter = new Painter(); . Example of declaring Methods . public int max (int x, int y){ if(x&gt;y) return x; else return y; } . Calling Methods . Allows code reuse for optimization and organization | Remember semicolons | objectReference.methodName(parameters); | Import math class to use the functions in that class | . Homework . public class Goblin { private String name; private int HP; private int DMG; private double hitChance; private double criticalHitChance; public String getName() { return name; } public int getHP() { return HP; } public int getDMG() { return DMG; } public double getHitChance() { return hitChance; } public double getCriticalHitChance(){ return criticalHitChance; } public boolean isAlive() { if (this.HP &gt; 0) { return true; } else { return false; } } public void setName(String newName) { this.name = newName; } public void setHP(int newHP) { this.HP = newHP; } public void takeDMG(int takenDamage) { this.HP -= takenDamage; } public void setDMG(int newDMG) { this.DMG = newDMG; } public void setHitChance(double newHitChance) { this.hitChance = newHitChance; } public void setCriticalHitChance(double newCriticalHitChance) { this.criticalHitChance = newCriticalHitChance; } } . import java.lang.Math; public class Duel { public static void attack(Goblin attackerGoblin, Goblin attackeeGoblin) { System.out.println(attackerGoblin.getName() + &quot; attacks &quot; + attackeeGoblin.getName() + &quot;!&quot;); if (Math.random() &lt; attackerGoblin.getHitChance()) { if (Math.random() &lt; attackerGoblin.getCriticalHitChance()){ attackeeGoblin.takeDMG(2*attackerGoblin.getDMG()); System.out.println(attackerGoblin.getName() + &quot; lands a critical hit!&quot;); System.out.println(attackeeGoblin.getName() + &quot; takes &quot; + 2*attackerGoblin.getDMG() + &quot; damage&quot;); } else{ attackeeGoblin.takeDMG(attackerGoblin.getDMG()); System.out.println(attackerGoblin.getName() + &quot; hits!&quot;); System.out.println(attackeeGoblin.getName() + &quot; takes &quot; + attackerGoblin.getDMG() + &quot; damage&quot;); } } else { System.out.println(attackerGoblin.getName() + &quot; misses...&quot;); } System.out.println(attackeeGoblin.getName() + &quot; HP: &quot; + attackeeGoblin.getHP()); System.out.println(); } public static void fight(Goblin goblin1, Goblin goblin2) { while (goblin1.isAlive() &amp;&amp; goblin2.isAlive()) { attack(goblin1, goblin2); if (!goblin1.isAlive()) { System.out.println(goblin1.getName() + &quot; has perished&quot;); break; } attack(goblin2, goblin1); if (!goblin2.isAlive()) { System.out.println(goblin2.getName() + &quot; has perished&quot;); break; } } } public static void main(String[] args) { Goblin goblin1 = new Goblin(); goblin1.setName(&quot;jeffrey&quot;); goblin1.setHP(12); goblin1.setDMG(2); goblin1.setHitChance(0.50); goblin1.setCriticalHitChance(0.1); Goblin goblin2 = new Goblin(); goblin2.setName(&quot;Gunther the great&quot;); goblin2.setHP(4); goblin2.setDMG(1); goblin2.setHitChance(1); goblin1.setCriticalHitChance(0.5); fight(goblin1, goblin2); } } Duel.main(null); . jeffrey attacks Gunther the great! jeffrey misses... Gunther the great HP: 4 Gunther the great attacks jeffrey! Gunther the great hits! jeffrey takes 1 damage jeffrey HP: 11 jeffrey attacks Gunther the great! jeffrey misses... Gunther the great HP: 4 Gunther the great attacks jeffrey! Gunther the great hits! jeffrey takes 1 damage jeffrey HP: 10 jeffrey attacks Gunther the great! jeffrey hits! Gunther the great takes 2 damage Gunther the great HP: 2 Gunther the great attacks jeffrey! Gunther the great hits! jeffrey takes 1 damage jeffrey HP: 9 jeffrey attacks Gunther the great! jeffrey misses... Gunther the great HP: 2 Gunther the great attacks jeffrey! Gunther the great hits! jeffrey takes 1 damage jeffrey HP: 8 jeffrey attacks Gunther the great! jeffrey lands a critical hit! Gunther the great takes 4 damage Gunther the great HP: -2 Gunther the great attacks jeffrey! Gunther the great hits! jeffrey takes 1 damage jeffrey HP: 7 Gunther the great has perished .",
            "url": "https://nicholasramos5.github.io/VSCodings/college%20board/java/2022/10/13/Unit2-Objects.html",
            "relUrl": "/college%20board/java/2022/10/13/Unit2-Objects.html",
            "date": " • Oct 13, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Unit 1 - Primitives",
            "content": "2006 FRQ . Problem 2a . A set of classes is used to represent various items that are available for purchase. Items are either taxable or nontaxable. The purchase price of a taxable item is computed from its list price and its tax rate. The purchase price of a nontaxable item is simply its list price. Part of the class hierarchy is shown in the diagram below. . *Diagram not shown The definitions of the Item interface and the TaxableItem class are shown below . public abstract class TaxableItem implements item { private double taxRate; public abstract double getListPrice(); public TaxableItem(double rate) { taxRate = rate; } // returns the price of the item including the tax public double purchasePrice() { /* to be implemented in part (a) */} } . Write the TaxableItem method purchasePrice. The purchase price of a TaxableItem is its list price plus the tax on the item. The tax is computed by multiplying the list price by the tax rate. For example, if the tax rate is 0.10 (representing 10%), the purchase price of an item with a list price of 7.15. Complete method purchasePrice below. . // returns the price of the item including the tax public double purchasePrice(){ double price = 1.1 * getListPrice(); return price; } . Problem 3a . Consider the following incomplete class that stores information about a customer, which includes a name and unique ID (a positive integer). To facilitate sorting, customers are ordered alphabetically by name. If two or more customers have the same name, they are further ordered by ID number. A particular customer is &quot;greater than&quot; another customer if that particular customer appears later in the ordering than the other customer. . public class Customer { //constructs a Customer with a given name and ID number public Customer(String name, int idNum) { /* implementation not shown */} //returns the customer&#39;s name public String getName () { /* implementation not shown */} // returns 0 when this customer is equal to other; // a positive integer when this customer is greater than other; // a negative integer when this customer is less than other; public int compareCustomer(Customer other) { /* to be implemented in part (a) */ } // There may be fields, constructors, and methods that are not shown. } . Write the Customer method compareCustomer, which compares this customer to a given customer, other. Customers are ordered alphabetically by name, using the compareTo method of the String class. If the names of the two customers are the same, then the customers are ordered by ID number. Method compareCustomer should return a positive integer if this customer is greater than other, a negative integer if this customer is less than other, and 0 if they are the same. . public int compareCustomer(Customer other){ int nameCompare = this.getName().compareTo(other.getName()); if(nameCompare == 0){ return this.getID() - other.getID(); } else{ return nameCompare; } } .",
            "url": "https://nicholasramos5.github.io/VSCodings/college%20board/java/2022/10/12/Unit1-Primitives.html",
            "relUrl": "/college%20board/java/2022/10/12/Unit1-Primitives.html",
            "date": " • Oct 12, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Array Lists",
            "content": "Array List Explanation . An array list is an array that you can manipulate the size of. With normal arrays, they have their size set from the start and you cannot change the preassigned size of that array. However, array list elements can be added and removed from an array list whenever there is a need, helping the user with memory management. . Use of Array Lists . I have decided to use arrays to display some information about different types of cars. Array lists allow me to display information simply and in a way that is relatively easy to read. . import java.util.ArrayList; import java.util.Collections; import java.util.List; public class Vehicle{ private String model; private String make; private String cost; private String acceleration; private int seats; private String engine; public Vehicle(String model, String make, String cost, String acceleration, int seats, String engine){ this.model = model; this.make = make; this.cost = cost; this.acceleration = acceleration; this.seats = seats; this.engine = engine; } public String toString() { return String.format(&quot;%s t t%s t t%s t%s t%d t%s&quot;, model, make, cost, acceleration, seats, engine); } public static void main(String[] args){ List&lt;Vehicle&gt; listVehicles = new ArrayList&lt;Vehicle&gt;(); listVehicles.add(new Vehicle(&quot;TLX&quot;, &quot;Acura&quot;, &quot;54,500 USD&quot;, &quot;5.9 seconds&quot;, 5, &quot;355.0-hp, 3.0-liter, V6 Cylinder&quot;)); listVehicles.add(new Vehicle(&quot;Camry&quot;, &quot;Toyota&quot;, &quot;36,270 USD&quot;, &quot;5.1 seconds&quot;, 5, &quot;301.0-hp, 3.5-liter, V6 Cylinder&quot;)); listVehicles.add(new Vehicle(&quot;Camaro&quot;, &quot;Chevy&quot;, &quot;43,500 USD&quot;, &quot;5.2 seconds&quot;, 4, &quot;455.0-hp, 6.2-liter, 8 Cylinder&quot;)); listVehicles.add(new Vehicle(&quot;Model S&quot;, &quot;Tesla&quot;, &quot;135,990 USD&quot;, &quot;1.99 seconds&quot;, 5, &quot;no lol&quot;)); listVehicles.add(new Vehicle(&quot;SF90&quot;, &quot;Ferrari&quot;, &quot;511,295 USD&quot;, &quot;2.33 seconds&quot;, 2, &quot;986.0-hp, 4.0-liter, 8 Cylinder &quot;)); listVehicles.add(new Vehicle(&quot;Beetle&quot;, &quot;Volkswagen&quot;, &quot;20,895 USD&quot;, &quot;7.9 seconds&quot;, 4, )) for (Vehicle n : listVehicles){ System.out.println(n); } } } Vehicle.main(null); . TLX Acura 54,500 USD 5.9 seconds 5 355.0-hp, 3.0-liter, V6 Cylinder Camry Toyota 36,270 USD 5.1 seconds 5 301.0-hp, 3.5-liter, V6 Cylinder Camaro Chevy 43,500 USD 5.2 seconds 4 455.0-hp, 6.2-liter, 8 Cylinder Model S Tesla 135,990 USD 1.99 seconds 5 no lol SF90 Ferrari 511,295 USD 2.33 seconds 2 986.0-hp, 4.0-liter, 8 Cylinder . Science Olympiad Website . We are creating a Science Olympiad Website. To make it a fully functioning website, integration of array lists would be crucial for carrying out the functions that we would like to include. . import java.util.ArrayList; import java.util.Collections; import java.util.List; public class Member{ private String firstname; private String lastname; private String role; private int grade; private String email; public Member(String firstname, String lastname, String role, int grade, String email){ this.firstname = firstname; this.lastname = lastname; this.role = role; this.grade = grade; this.email = email; } public String toString() { return String.format(&quot;%s t%s t%s t%d t%s&quot;, firstname, lastname, role, grade, email); } public static void main(String[] args){ List&lt;Member&gt; listMembers = new ArrayList&lt;Member&gt;(); listMembers.add(new Member(&quot;Krish&quot;, &quot;Patil&quot;, &quot;Leadership&quot;, 11, &quot;krishpatil1019@gmail.com&quot;)); listMembers.add(new Member(&quot;Don&quot;, &quot;Tran &quot;, &quot;Leadership&quot;, 11, &quot;donqt@gmail.com&quot;)); listMembers.add(new Member(&quot;Rohan&quot;, &quot;Gaikwad&quot;, &quot;Vice President&quot;, 11, &quot;gaikwadrohan326@gmail.com&quot;)); listMembers.add(new Member(&quot;Audrey&quot;, &quot;Zeng&quot;, &quot;President&quot;, 12, &quot;audreyhuaxia@gmail.com &quot;)); listMembers.add(new Member(&quot;Nick&quot;, &quot;Ramos&quot;, &quot;no &quot;, 11, &quot;nicky.jay77@gmail.com&quot;)); listMembers.add(new Member(&quot;Nathan&quot;, &quot;Mananga&quot;, &quot;coder &quot;, 10, &quot;nathanmanangan@gmail.com&quot;)); for (Member n : listMembers){ System.out.println(n); } } } Member.main(null); . Krish Patil Leadership 11 krishpatil1019@gmail.com Don Tran Leadership 11 donqt@gmail.com Rohan Gaikwad Vice President 11 gaikwadrohan326@gmail.com Audrey Zeng President 12 audreyhuaxia@gmail.com Nick Ramos no 11 nicky.jay77@gmail.com Nathan Mananga coder 10 nathanmanangan@gmail.com . The above table shows some of the members, their roles, grades, and emails .",
            "url": "https://nicholasramos5.github.io/VSCodings/college%20board/java/2022/10/05/ArrayLists.html",
            "relUrl": "/college%20board/java/2022/10/05/ArrayLists.html",
            "date": " • Oct 5, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Arrays and Images",
            "content": "Saving PNG to GIF . Image IO read and Image IO write are focus of this code. A key portion of working with Images, or any file, is to know location of the input and output directories. . import javax.imageio.ImageIO; import java.io.File; import java.io.IOException; import java.awt.image.BufferedImage; public class ImageIOTest { public static void main( String[] args ){ BufferedImage img = null; // buffer type try { // Name of file and directories String name = &quot;MonaLisa&quot;; String in = &quot;images/&quot;; String out = &quot;images/tmp/&quot;; // Either use URL or File for reading image using ImageIO File imageFile = new File(in + name + &quot;.png&quot;); img = ImageIO.read(imageFile); // set buffer of image data // ImageIO Image write to gif in Java // Documentation https://docs.oracle.com/javase/tutorial/2d/images/index.html ImageIO.write(img, &quot;gif&quot;, new File(out + name + &quot;.gif&quot;) ); // write buffer to gif } catch (IOException e) { e.printStackTrace(); } System.out.println(&quot;Success&quot;); } } ImageIOTest.main(null); . Success . Image Scaling and ASCII Conversion . In this example we print out a row of text for each row in the image. However, it seems as if the image is too tall. To address this problem, try to output a single character per block of pixels. In particular, average the grayscale values in a rectangular block that’s twice as tall as it is wide, and print out a single character for this block. . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToAscii() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col .getGreen() * 0.11))); try { asciiPrt.print(asciiChar(pixVal)); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics monaLisa = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); monaLisa.printStats(&quot;Original&quot;); monaLisa.resize(33); monaLisa.printStats(&quot;Scaled&quot;); monaLisa.convertToAscii(); Pics pumpkin = new Pics(&quot;pumpkin&quot;, &quot;png&quot;); pumpkin.printStats(&quot;Original&quot;); pumpkin.resize(33); pumpkin.printStats(&quot;Scaled&quot;); pumpkin.convertToAscii(); Pics Autumn = new Pics(&quot;Autumn&quot;, &quot;png&quot;); Autumn.printStats(&quot;Original&quot;); Autumn.resize(33); Autumn.printStats(&quot;Scaled&quot;); Autumn.convertToAscii(); } } Pics.main(null); . Original: 499298 389x413 images/MonaLisa.png Scaled: 55625 128x136 images/tmp/MonaLisa.png Original: 39392 302x265 images/pumpkin.png Scaled: 10497 100x87 images/tmp/pumpkin.png Original: 1071473 1522x954 images/Autumn.png Scaled: 440949 502x315 images/tmp/Autumn.png . Setup for Color Scales . Prior to writing the code for color scales, it is important to create a method that will acquire data for a given image. This helps prevent the inefficient rewriting of code. . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; abstract class ImageBlueprint { protected final String inDir = &quot;images/&quot;; // location of images protected final String outDir = &quot;images/tmp/&quot;; // location of created files protected String inFile; protected String resizedFile; protected String colorFile; protected String ext; // extension of file protected long bytes; protected int width; protected int height; // get attributes of picture public ImageBlueprint(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.colorFile = this.outDir + name + &quot;New&quot; + &quot;.png&quot;; this.setStats(); } public ImageBlueprint(String image) { this(image, &quot;png&quot;); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } //ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // Will be used later protected abstract void conversion(); } . . Color Scaling . For the primary colors (RGB), all that&#39;s needed is to set the values of the non scaled color to be 00. . Gray-scaling is more complicated, and requires averaging the R, G, and B values, meaning add the values together and divide by three. . public class RedConversion extends ImageBlueprint { public RedConversion(String name, String ext) { super(name, ext); this.colorFile = this.outDir + name + &quot;Red&quot; + &quot;.png&quot;; } public RedConversion(String name) { super(name); this.colorFile = this.outDir + name + &quot;Red&quot; + &quot;.png&quot;; } @Override protected void conversion() { BufferedImage img = null; PrintWriter colorPrt = null; FileWriter colorWrt = null; // Just deletes file if already exists in tmp try { File file = new File(this.colorFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } // try { // colorPrt = new PrintWriter(colorWrt = new FileWriter(this.colorFile, true)); // } catch (IOException e) { // // TODO Auto-generated catch block // e.printStackTrace(); // } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { // TODO Auto-generated catch block e.printStackTrace(); } for (int i = 0; i &lt; this.height; i++) { for (int j = 0; j &lt; this.width; j++) { Color col = new Color(img.getRGB(j, i)); int rgb = new Color(col.getRed(), 0, 0).getRGB(); img.setRGB(j, i, rgb); } } try { ImageIO.write(img, &quot;png&quot;, new File(this.colorFile) ); } catch (IOException e) { // TODO Auto-generated catch block e.printStackTrace(); } } public static void main(String[] args) { RedConversion autumn = new RedConversion(&quot;autumn&quot;, &quot;png&quot;); autumn.conversion(); } } RedConversion.main(null); . . public class GreenConversion extends ImageBlueprint { public GreenConversion(String name, String ext) { super(name, ext); this.colorFile = this.outDir + name + &quot;Green&quot; + &quot;.png&quot;; } public GreenConversion(String name) { super(name); this.colorFile = this.outDir + name + &quot;Green&quot; + &quot;.png&quot;; } @Override protected void conversion() { BufferedImage img = null; PrintWriter colorPrt = null; FileWriter colorWrt = null; // Just deletes file if already exists in tmp try { File file = new File(this.colorFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } // try { // colorPrt = new PrintWriter(colorWrt = new FileWriter(this.colorFile, true)); // } catch (IOException e) { // // TODO Auto-generated catch block // e.printStackTrace(); // } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { // TODO Auto-generated catch block e.printStackTrace(); } for (int i = 0; i &lt; this.height; i++) { for (int j = 0; j &lt; this.width; j++) { Color col = new Color(img.getRGB(j, i)); int rgb = new Color(0, col.getGreen(), 0).getRGB(); img.setRGB(j, i, rgb); } } try { ImageIO.write(img, &quot;png&quot;, new File(this.colorFile) ); } catch (IOException e) { // TODO Auto-generated catch block e.printStackTrace(); } } public static void main(String[] args) { GreenConversion Autumn = new GreenConversion(&quot;Autumn&quot;, &quot;png&quot;); Autumn.conversion(); } } GreenConversion.main(null); . . public class BlueConversion extends ImageBlueprint { public BlueConversion(String name, String ext) { super(name, ext); this.colorFile = this.outDir + name + &quot;Blue&quot; + &quot;.png&quot;; } public BlueConversion(String name) { super(name); this.colorFile = this.outDir + name + &quot;Blue&quot; + &quot;.png&quot;; } @Override protected void conversion() { BufferedImage img = null; PrintWriter colorPrt = null; FileWriter colorWrt = null; // Just deletes file if already exists in tmp try { File file = new File(this.colorFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } // try { // colorPrt = new PrintWriter(colorWrt = new FileWriter(this.colorFile, true)); // } catch (IOException e) { // // TODO Auto-generated catch block // e.printStackTrace(); // } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { // TODO Auto-generated catch block e.printStackTrace(); } for (int i = 0; i &lt; this.height; i++) { for (int j = 0; j &lt; this.width; j++) { Color col = new Color(img.getRGB(j, i)); int rgb = new Color(0, 0, col.getBlue()).getRGB(); img.setRGB(j, i, rgb); } } try { ImageIO.write(img, &quot;png&quot;, new File(this.colorFile) ); } catch (IOException e) { // TODO Auto-generated catch block e.printStackTrace(); } } public static void main(String[] args) { BlueConversion Autumn = new BlueConversion(&quot;Autumn&quot;, &quot;png&quot;); Autumn.conversion(); } } BlueConversion.main(null); . . public class GrayConversion extends ImageBlueprint { public GrayConversion(String name, String ext) { super(name, ext); this.colorFile = this.outDir + name + &quot;Gray&quot; + &quot;.png&quot;; } public GrayConversion(String name) { super(name); this.colorFile = this.outDir + name + &quot;Gray&quot; + &quot;.png&quot;; } @Override protected void conversion() { BufferedImage img = null; PrintWriter colorPrt = null; FileWriter colorWrt = null; // Just deletes file if already exists in tmp try { File file = new File(this.colorFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } // try { // colorPrt = new PrintWriter(colorWrt = new FileWriter(this.colorFile, true)); // } catch (IOException e) { // // TODO Auto-generated catch block // e.printStackTrace(); // } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { // TODO Auto-generated catch block e.printStackTrace(); } for (int i = 0; i &lt; this.height; i++){ for (int j = 0; j &lt; this.width; j++){ Color col = new Color(img.getRGB(j,i)); int rgb = new Color(((col.getRed()+ col.getGreen()+ col.getBlue())/3), ((col.getRed()+ col.getGreen()+ col.getBlue())/3), ((col.getRed()+ col.getGreen()+ col.getBlue())/3)).getRGB(); img.setRGB(j, i, rgb); } } try { ImageIO.write(img, &quot;png&quot;, new File(this.colorFile) ); } catch (IOException e) { // TODO Auto-generated catch block e.printStackTrace(); } } public static void main(String[] args) { GrayConversion Autumn = new GrayConversion(&quot;Autumn&quot;, &quot;png&quot;); Autumn.conversion(); } } GrayConversion.main(null); . . ASCII . We are going to convert images to ASCII characters. The existing problem with the current method is that it stretched the image out, hurting the appeal. The best solution is to take 4 rows and 2 columns of pixels and convert them into a single ASCII character. . The finished result still looks horrible. . public class ASCIIConversion extends ImageBlueprint { public ASCIIConversion(String name, String ext) { super(name, ext); this.colorFile = this.outDir + name + &quot;ASCII&quot; + &quot;.txt&quot;; } public ASCIIConversion(String name) { super(name); this.colorFile = this.outDir + name + &quot;ASCII&quot; + &quot;.txt&quot;; } @Override protected void conversion() { // Controls how big chunks are taken for ASCII characters final int XLENGTH = 1; final int YLENGTH = 2; BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; Color col = null; try { File file = new File(this.colorFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.colorFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i += 4) { for (int j = 0; j &lt; img.getWidth(); j += 2) { // colorSum stores total sum of RGB values, counter keeps track of how many are being counted // colorSum/counter = average // average is taken to get ASCII character double colorSum = 0; int counter = 0; for (int k = 0; k &lt; XLENGTH; k++) { for (int l = 0; l &lt; YLENGTH; l++) { if (k &lt; img.getWidth() &amp;&amp; l &lt; img.getHeight()) { counter++; col = new Color(img.getRGB(j + k, i + l)); colorSum += (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col .getGreen() * 0.11))); } } } double average = colorSum / counter; try { asciiPrt.print(asciiChar(average)); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } } public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } public static void main(String[] args) { ASCIIConversion Autumn = new ASCIIConversion(&quot;Autumn&quot;, &quot;png&quot;); Autumn.conversion(); } } ASCIIConversion.main(null); . Atrocious ASCII-Scaled Autumn . Hello . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToAscii() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i+=2) { for (int j = 0; j &lt; img.getWidth(); j+=1) { Color col = new Color(img.getRGB(j, i)); double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col .getGreen() * 0.11))); try { asciiPrt.print(asciiChar(pixVal)); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics monaLisa = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); monaLisa.printStats(&quot;Original&quot;); monaLisa.resize(33); monaLisa.printStats(&quot;Scaled&quot;); monaLisa.convertToAscii(); Pics pumpkin = new Pics(&quot;pumpkin&quot;, &quot;png&quot;); pumpkin.printStats(&quot;Original&quot;); pumpkin.resize(33); pumpkin.printStats(&quot;Scaled&quot;); pumpkin.convertToAscii(); Pics autumn = new Pics(&quot;autumn&quot;, &quot;png&quot;); autumn.printStats(&quot;Original&quot;); autumn.resize(33); autumn.printStats(&quot;Scaled&quot;); autumn.convertToAscii(); } } Pics.main(null); . Original: 499298 389x413 images/MonaLisa.png Scaled: 55625 128x136 images/tmp/MonaLisa.png Original: 39392 302x265 images/pumpkin.png Scaled: 10497 100x87 images/tmp/pumpkin.png Original: 1071473 1522x954 images/autumn.png Scaled: 440949 502x315 images/tmp/autumn.png . The Kernel crashed while executing code in the the current cell or a previous cell. Please review the code in the cell(s) to identify a possible cause of the failure. Click &lt;a href=&#39;https://aka.ms/vscodeJupyterKernelCrash&#39;&gt;here&lt;/a&gt; for more info. View Jupyter &lt;a href=&#39;command:jupyter.viewOutput&#39;&gt;log&lt;/a&gt; for further details. .",
            "url": "https://nicholasramos5.github.io/VSCodings/college%20board/java/2022/10/02/Arrays-And-Images.html",
            "relUrl": "/college%20board/java/2022/10/02/Arrays-And-Images.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "API Implementation",
            "content": "Explanation . API&#39;s (Application Programming Interface) provide a way to store a large amount of data, and then allow you to access that data easily, without having to take it directly from another source. You can call API&#39;s in java and have that data be transferred. JSON is used to transmit this data. Since they&#39;re a massive data pool, you can easily take out data, allowing you to save time and code efficiently. . import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; HttpRequest request = HttpRequest.newBuilder() .uri(URI.create(&quot;https://wft-geo-db.p.rapidapi.com/v1/geo/cities/Q65/locatedIn&quot;)) .header(&quot;X-RapidAPI-Key&quot;, &quot;f4dbb6f12cmsh8393e3c31992857p1076ddjsnf78a3b66c369&quot;) .header(&quot;X-RapidAPI-Host&quot;, &quot;wft-geo-db.p.rapidapi.com&quot;) .method(&quot;GET&quot;, HttpRequest.BodyPublishers.noBody()) .build(); HttpResponse&lt;String&gt; response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString()); System.out.println(response.body()); . {&#34;data&#34;:{&#34;id&#34;:172136,&#34;wikiDataId&#34;:&#34;Q104994&#34;,&#34;type&#34;:&#34;ADM2&#34;,&#34;city&#34;:&#34;Los Angeles County&#34;,&#34;name&#34;:&#34;Los Angeles County&#34;,&#34;country&#34;:&#34;United States of America&#34;,&#34;countryCode&#34;:&#34;US&#34;,&#34;region&#34;:&#34;California&#34;,&#34;regionCode&#34;:&#34;CA&#34;,&#34;elevationMeters&#34;:3,&#34;latitude&#34;:34.05,&#34;longitude&#34;:-118.25,&#34;population&#34;:10014009,&#34;timezone&#34;:&#34;America__Los_Angeles&#34;,&#34;deleted&#34;:false}} . Build a Web Service . This code provides output with information on certain cities. In this case, we are looking at Los Angeles County. We have access to information about this city, such as country, region, elevation, latitude, and population. . import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; HttpRequest request = HttpRequest.newBuilder() .uri(URI.create(&quot;https://wft-geo-db.p.rapidapi.com/v1/geo/cities/Q65/locatedIn&quot;)) .header(&quot;X-RapidAPI-Key&quot;, &quot;f4dbb6f12cmsh8393e3c31992857p1076ddjsnf78a3b66c369&quot;) .header(&quot;X-RapidAPI-Host&quot;, &quot;wft-geo-db.p.rapidapi.com&quot;) .method(&quot;GET&quot;, HttpRequest.BodyPublishers.noBody()) .build(); HttpResponse&lt;String&gt; response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString()); System.out.println(response.body()); import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; import java.util.Date; import java.util.HashMap; import org.json.simple.JSONObject; import org.json.simple.parser.JSONParser; import org.springframework.http.HttpStatus; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.*; @RestController // annotation to create a RESTful web services @RequestMapping(&quot;/api/geodb-cities&quot;) //prefix of API public class CovidApiController { private JSONObject body; //last run result private HttpStatus status; //last run status String last_run = null; //last run day of month // GET Covid 19 Stats @GetMapping(&quot;/daily&quot;) //added to end of prefix as endpoint public ResponseEntity&lt;JSONObject&gt; getGeo() { //calls API once a day, sets body and status properties String today = new Date().toString().substring(0,10); if (last_run == null || !today.equals(last_run)) { try { //APIs can fail (ie Internet or Service down) //RapidAPI header HttpRequest request = HttpRequest.newBuilder() .uri(URI.create(&quot;https://wft-geo-db.p.rapidapi.com/v1/geo/cities/Q65/locatedIn&quot;)) .header(&quot;X-RapidAPI-Key&quot;, &quot;f4dbb6f12cmsh8393e3c31992857p1076ddjsnf78a3b66c369&quot;) .header(&quot;X-RapidAPI-Host&quot;, &quot;wft-geo-db.p.rapidapi.com&quot;) .method(&quot;GET&quot;, HttpRequest.BodyPublishers.noBody()) .build(); //RapidAPI request and response HttpResponse&lt;String&gt; response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString()); //JSONParser extracts text body and parses to JSONObject this.body = (JSONObject) new JSONParser().parse(response.body()); this.status = HttpStatus.OK; //200 success this.last_run = today; } catch (Exception e) { //capture failure info HashMap&lt;String, String&gt; status = new HashMap&lt;&gt;(); status.put(&quot;status&quot;, &quot;RapidApi failure: &quot; + e); //Setup object for error this.body = (JSONObject) status; this.status = HttpStatus.INTERNAL_SERVER_ERROR; //500 error this.last_run = null; } } //return JSONObject in RESTful style return new ResponseEntity&lt;&gt;(body, status); } } . {&#34;data&#34;:{&#34;id&#34;:172136,&#34;wikiDataId&#34;:&#34;Q104994&#34;,&#34;type&#34;:&#34;ADM2&#34;,&#34;city&#34;:&#34;Los Angeles County&#34;,&#34;name&#34;:&#34;Los Angeles County&#34;,&#34;country&#34;:&#34;United States of America&#34;,&#34;countryCode&#34;:&#34;US&#34;,&#34;region&#34;:&#34;California&#34;,&#34;regionCode&#34;:&#34;CA&#34;,&#34;elevationMeters&#34;:3,&#34;latitude&#34;:34.05,&#34;longitude&#34;:-118.25,&#34;population&#34;:10014009,&#34;timezone&#34;:&#34;America__Los_Angeles&#34;,&#34;deleted&#34;:false}} . | import org.json.simple.JSONObject; package org.json.simple does not exist .",
            "url": "https://nicholasramos5.github.io/VSCodings/college%20board/java/2022/10/02/API-Implementation.html",
            "relUrl": "/college%20board/java/2022/10/02/API-Implementation.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "JavaScript UI Development",
            "content": "function logItType(output) { console.log(typeof output, &quot;;&quot;, output); //&quot;typeof&quot; keyword returns the type. } . function Person(name, email, classOf) { this.name = name; this.email = email; this.classOf = classOf; this.role = &quot;&quot;; } Person.prototype.setRole = function(role) { this.role = role; } Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.email, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;jmortensen@powayusd.com&quot;, 1977); // object type is easy to work with in JavaScript logItType(teacher); // before role logItType(teacher.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;Teacher&quot;); // set the role logItType(teacher); logItType(teacher.toJSON()); . object ; Person { name: &#39;Mr M&#39;, email: &#39;jmortensen@powayusd.com&#39;, classOf: 1977, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jmortensen@powayusd.com&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;Mr M&#39;, email: &#39;jmortensen@powayusd.com&#39;, classOf: 1977, role: &#39;Teacher&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jmortensen@powayusd.com&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} . var students = [ new Person(&quot;Krishtopher Patil&quot;, &quot;krishpatil1019@gmail.com&quot;, 2024), new Person(&quot;Donald Tran&quot;, &quot;donqt15@gmail.com&quot;, 2024), new Person(&quot;Nathan Manangan&quot;, &quot;prorichyman@gmail.com&quot;, 2024), new Person(&quot;Nicholas Ramos&quot;, &quot;nicky.jay77@gmail.com&quot;, 2024), ]; function Classroom(teacher, students){ teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } compsci = new Classroom(teacher, students); logItType(compsci.classroom); logItType(compsci.classroom[0].name); logItType(compsci.json[0]); logItType(JSON.parse(compsci.json[0])); . object ; [ Person { name: &#39;Mr M&#39;, email: &#39;jmortensen@powayusd.com&#39;, classOf: 1977, role: &#39;Teacher&#39; }, Person { name: &#39;Krishtopher Patil&#39;, email: &#39;krishpatil1019@gmail.com&#39;, classOf: 2024, role: &#39;Student&#39; }, Person { name: &#39;Donald Tran&#39;, email: &#39;donqt15@gmail.com&#39;, classOf: 2024, role: &#39;Student&#39; }, Person { name: &#39;Nathan Manangan&#39;, email: &#39;prorichyman@gmail.com&#39;, classOf: 2024, role: &#39;Student&#39; }, Person { name: &#39;Nicholas Ramos&#39;, email: &#39;nicky.jay77@gmail.com&#39;, classOf: 2024, role: &#39;Student&#39; } ] string ; Mr M string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jmortensen@powayusd.com&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} object ; { name: &#39;Mr M&#39;, ghID: &#39;jmortensen@powayusd.com&#39;, classOf: 1977, role: &#39;Teacher&#39; } . Classroom.prototype._toHtml = function() { var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid white;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em black;&quot; ); var body = &quot;&quot;; body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Email&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; for (var row of compsci.classroom) { body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.email + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; } return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; $$.html(compsci._toHtml()); . NameEmailClass OfRole . Mr M | jmortensen@powayusd.com | 1977 | Teacher | Krishtopher Patil | krishpatil1019@gmail.com | 2024 | Student | Donald Tran | donqt15@gmail.com | 2024 | Student | Nathan Manangan | prorichyman@gmail.com | 2024 | Student | Nicholas Ramos | nicky.jay77@gmail.com | 2024 | Student | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://nicholasramos5.github.io/VSCodings/college%20board/java/2022/09/25/javascript.html",
            "relUrl": "/college%20board/java/2022/09/25/javascript.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Fibonacci - Extends and Data Modeling",
            "content": "Fibonacci Class . /* * Creator: Nighthawk Coding Society * Mini Lab Name: Fibonacci sequence, featuring a Stream Algorithm * */ import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ public class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected void init() { this.name = &quot;Stream&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(this.size) .forEach(f -&gt; this.setData(f[0]) ); } /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { Fibo fib = new Fibo(); fib.print(); } } Fibo.main(null); . Fibonacci using a For Loop . import javax.swing.JOptionPane; public class FiboFor { public static void main(String[] args) { String inpStr = JOptionPane.showInputDialog(&quot;Give the amount of Fibo numbers that you would like to print&quot;); int inpNum = Integer.parseInt(inpStr); int first = 0; int second = 1; System.out.println(&quot;Here is the Fibonacci Sequence for &quot; + inpNum + &quot; terms:&quot;); for (int i = 1; i &lt;= inpNum; i++) { System.out.print(first + &quot; &quot;); int nextNum = first + second; first = second; second = nextNum; } } } FiboFor.main(null); . Here is the Fibonacci Sequence for 10 terms: 0 1 1 2 3 5 8 13 21 34 . Fibonacci using While Loop . import javax.swing.JOptionPane; public class FiboWhile { public static void main(String[] args) { int start = 0; String inpStr = JOptionPane.showInputDialog(&quot;Give the amount of Fibo numbers that you would like to print&quot;); int inpNum = Integer.parseInt(inpStr); int first = 0; int second = 1; System.out.println(&quot;Here is the Fibonacci Sequence for &quot; + inpNum + &quot; terms:&quot;); while (start &lt; inpNum) { System.out.print(first + &quot; &quot;); int nextNum = first + second; first = second; second = nextNum; start++; } } } FiboWhile.main(null); . Here is the Fibonacci Sequence for 10 terms: 0 1 1 2 3 5 8 13 21 34 . Fibonacci Recursion Loop . import javax.swing.JOptionPane; public class FiboRec{ public static int Recursion(int n){ if(n == 0){ return 0; } if(n == 1 || n == 2){ return 1; } return Recursion(n-2) + Recursion(n-1); } public static void main(String args[]) { String num = JOptionPane.showInputDialog(&quot;Give the amount of Fibo numbers that you would like to print&quot;); int end = Integer.parseInt(num); System.out.println(&quot;Here is the Fibonacci Sequence for &quot; + num + &quot; terms:&quot;); for(int i = 0; i &lt; end; i++){ System.out.print(Recursion(i) +&quot; &quot;); } } } FiboRec.main(null); . Here is the Fibonacci Sequence for 10 terms: 0 1 1 2 3 5 8 13 21 34 . Fibonacci Abstraction . abstract class Fibonacci { abstract void run(); private int first; private int second; public void setFirst(int num) { first = num; } public int getFirst() { return first; } public void setSecond(int num) { second = num; } public int getSecond() { return second; } } class Fibo extends Fibonacci { void run() { String inpStr = JOptionPane.showInputDialog(&quot;Give the amount of Fibo numbers that you would like to print&quot;); int inpNum = Integer.parseInt(inpStr); setFirst(0); setSecond(1); System.out.println(&quot;Here is the Fibonacci Sequence for &quot; + inpNum + &quot; terms:&quot;); for (int i = 1; i &lt;= inpNum; i++) { System.out.print(getFirst() + &quot; &quot;); int nextNum = getFirst() + getSecond(); setFirst(getSecond()); setSecond(nextNum); } } public static void main(String args[]) { Fibonacci obj = new Fibo(); obj.run(); } } Fibo.main(null); . Here is the Fibonacci Sequence for 10 terms: 0 1 1 2 3 5 8 13 21 34 . The Kernel crashed while executing code in the the current cell or a previous cell. Please review the code in the cell(s) to identify a possible cause of the failure. Click &lt;a href=&#39;https://aka.ms/vscodeJupyterKernelCrash&#39;&gt;here&lt;/a&gt; for more info. View Jupyter &lt;a href=&#39;command:jupyter.viewOutput&#39;&gt;log&lt;/a&gt; for further details. . Hacks Questions . Skill 1.B: Used different types of loops or methods of program for each situation . Skill 4.C: Code segments produce same results because the output is printed in the same format, the only thing changing is the type of loop. Key Finding: Different Loops can produce same output as long as the loops have the same purpose- in this case with for and while loops . Skill 5.A: Recursion runs the fastest since it&#39;s not a loop, but all methods work equally well. It&#39;s important to know how to recreate a program in different ways. .",
            "url": "https://nicholasramos5.github.io/VSCodings/college%20board/java/2022/09/25/fibo-extends-data-modeling.html",
            "relUrl": "/college%20board/java/2022/09/25/fibo-extends-data-modeling.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Iteration Mini Lab - The Food Cycle",
            "content": "Iteration allows you to go through a list of items relatively quickly. It is easier to store items in a list (known as an array) and then call forth each item later, rather than have to list everything out each and every time. . The Food Cycle . In this example, we can see how iteration and 2d arrays function via animals eating each other :) . public class FoodCycle{ String [][] foodcycle; public FoodCycle(){ foodcycle = new String[][]{ { &quot; .--. .--. &quot;, &quot; : ( . _......_ . /) : &quot;, &quot; &#39;. ` ` .&#39; &quot;, &quot; /&#39; _ _ ` &quot;, &quot; / 0} {0 &quot;, &quot; | / | &quot;, &quot; | /&#39; ` | &quot;, &quot; | . .==. . | / &quot;, &quot; &#39;._ .&#39; __// &#39;./ _.&#39; &quot;, &quot; / ``&#39;._-&#39;&#39;-_.&#39;`` &quot;, &quot; &quot; }, { &quot; . &quot;, &quot; / V &quot;, &quot; / ` / &quot;, &quot; &lt;&lt; | &quot;, &quot; / | &quot;, &quot; / | &quot;, &quot; / | &quot;, &quot; / / &quot;, &quot; ( ) | | &quot;, &quot;_________| _//_ | | &quot;, &quot;&lt;__________ _____) __) &quot; }, { &quot; / __ &quot;, &quot; ( @ ___ &quot;, &quot; / O &quot;, &quot; / (_____/ &quot;, &quot;/_____/ U &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot; }, { &quot;| /| &quot;, &quot;| o_o | &quot;, &quot; _^_/ &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot; } }; } public void print(){ System.out.println(&quot; &quot;); System.out.println(&quot;The Food Cycle&quot;); int animalCount = foodcycle.length; for (int i = animalCount; i &gt; 0; i--){ System.out.println(i + &quot; animals left &quot;); for (int row = 0; row &lt; foodcycle[0].length; row++){ for (int animal = 0; animal &lt; i; animal++){ System.out.print(foodcycle[animal][row] + &quot; t&quot;); } System.out.println(); } System.out.println(&quot;An Animal has been eaten!&quot;); System.out.println(&quot;Run for your lives!&quot;); System.out.println(&quot; n-- n&quot;); animalCount -= 1; } System.out.println(&quot;No more animals :( n&quot;); System.out.println(&quot;--&quot;); System.out.println(&quot; THE END &quot;); } public static void main(String[] args){ new FoodCycle().print(); } } FoodCycle.main(null); . The Food Cycle 4 animals left .--. .--. . / __ | /| : ( . _......_ . /) : / V ( @ ___ | o_o | &#39;. ` ` .&#39; / ` / / O _^_/ /&#39; _ _ ` &lt;&lt; | / (_____/ / 0} {0 / | /_____/ U | / | / | | /&#39; ` | / | | . .==. . | / / / &#39;._ .&#39; __// &#39;./ _.&#39; ( ) | | / ``&#39;._-&#39;&#39;-_.&#39;`` _________| _//_ | | &lt;__________ _____) __) An Animal has been eaten! Run for your lives! -- 3 animals left .--. .--. . / __ : ( . _......_ . /) : / V ( @ ___ &#39;. ` ` .&#39; / ` / / O /&#39; _ _ ` &lt;&lt; | / (_____/ / 0} {0 / | /_____/ U | / | / | | /&#39; ` | / | | . .==. . | / / / &#39;._ .&#39; __// &#39;./ _.&#39; ( ) | | / ``&#39;._-&#39;&#39;-_.&#39;`` _________| _//_ | | &lt;__________ _____) __) An Animal has been eaten! Run for your lives! -- 2 animals left .--. .--. . : ( . _......_ . /) : / V &#39;. ` ` .&#39; / ` / /&#39; _ _ ` &lt;&lt; | / 0} {0 / | | / | / | | /&#39; ` | / | | . .==. . | / / / &#39;._ .&#39; __// &#39;./ _.&#39; ( ) | | / ``&#39;._-&#39;&#39;-_.&#39;`` _________| _//_ | | &lt;__________ _____) __) An Animal has been eaten! Run for your lives! -- 1 animals left .--. .--. : ( . _......_ . /) : &#39;. ` ` .&#39; /&#39; _ _ ` / 0} {0 | / | | /&#39; ` | | . .==. . | / &#39;._ .&#39; __// &#39;./ _.&#39; / ``&#39;._-&#39;&#39;-_.&#39;`` An Animal has been eaten! Run for your lives! -- No more animals :( -- THE END . Iteration Using Objects . This example could also be in the form of objects. Because the static key word, a class can be created from the animals alone, which creates animal objects and also perform methods. In this sense, the class has universal methods which can be called to do something to the objects it (the class) created. . By using object oriented programming (OOP), the animals are much easier to replicate and they can be given other properties such as names, age, type etc. So, unlike iteration using purely 2D arrays, each fish can have unique properties. Both of them, however, are relatively easy to expand the list that the print function iterates through. However, OOP makes it far easier to manipulate the data of the fishes and the list that is iterated through. .",
            "url": "https://nicholasramos5.github.io/VSCodings/college%20board/java/2022/09/19/iteration.html",
            "relUrl": "/college%20board/java/2022/09/19/iteration.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "FRQ 1 - 2018",
            "content": "This question involves reasoning about a simulation of a frog hopping in a straight line. The frog attempts to hop to a goal within a specified number of hops. The simulation is encapsulated in the following FrogSimulation class. You will write two of the methods in this class. . public class FrogSimulation { /** Distance, in inches, from the starting position to the goal. */ private int goalDistance; /** Maximum number of hops allowed to reach the goal. */ private int maxHops; /** Constructs a FrogSimulation where dist is the distance, in inches, from the starting * position to the goal, and numHops is the maximum number of hops allowed to reach the goal. * Precondition: dist &gt; 0; numHops &gt; 0 */ public FrogSimulation(int dist, int numHops) { goalDistance = dist; maxHops = numHops; } /** Returns an integer representing the distance, in inches, to be moved when the frog hops. */ private int hopDistance() { /* implementation not shown */ } /** Simulates a frog attempting to reach the goal as described in part (a). * Returns true if the frog successfully reached or passed the goal during the simulation; * false otherwise. */ public boolean simulate() { /* to be implemented in part (a) */ } /** Runs num simulations and returns the proportion of simulations in which the frog * successfully reached or passed the goal. * Precondition: num &gt; 0 */ public double runSimulations(int num) { /* to be implemented in part (b) */ } } . Part A . Write the simulate method, which simulates the frog attempting to hop in a straight line to a goal from the frog&#39;s starting position of 0 within a maximum number of hops. The method returns true if the frog successfully reached the goal within the maximum number of hops; otherwise, the method returns false. . The FrogSimulation class provides a method called hopDistance that returns an integer representing the distance (positive or negative) to be moved when the frog hops. A positive distance represents a move toward the goal. A negative distance represents a move away from the goal. The returned distance may vary from call to call. Each time the frog hops, its position is adjusted by the value returned by a call to the hopDistance method. . The frog hops until one of the following conditions becomes true: . The frog has reached or passed the goal. | The frog has reached a negative position. | The frog has taken the maximum number of hops without reaching the goal. | . Class information for this question: . public class FrogSimulation private int goalDistance private int maxHops private int hopDistance() public boolean simulate() public double runSimulations(int num) . Complete method simulate below. You must use hopDistance appropriately to receive full credit. . /** Simulates a frog attempting to reach the goal as described in part (a). * Returns true if the frog successfully reached or passed the goal during the simulation; * false otherwise. */ public boolean simulate() { int position = 0; for (int count = 0; count &lt; maxHops; count++) { position += hopDistance(); if (position &gt;= goalDistance) { return true; } else if (position &lt; 0) { return false; } } return false; } . Part B . Write the runSimulations method, which performs a given number of simulations and returns the proportion of simulations in which the frog successfully reached or passed the goal. For example, if the parameter passed to runSimulations is 400, and 100 of the 400 simulate method calls returned true, then the runSimulations method should return 0.25. . Complete method runSimulations below. Assume that simulate works as specified, regardless of what you wrote in part (a). You must use simulate appropriately to receive full credit. . /** Runs num simulations and returns the proportion of simulations in which the frog * successfully reached or passed the goal. * Precondition: num &gt; 0 */ public double runSimulations(int num) { int countSuccess = 0; for (int count = 0; count &lt; num; count++) { if(simulate()) { countSuccess++; } } return (double) countSuccess / num; } .",
            "url": "https://nicholasramos5.github.io/VSCodings/college%20board/java/2022/09/16/FRQ1(2018).html",
            "relUrl": "/college%20board/java/2022/09/16/FRQ1(2018).html",
            "date": " • Sep 16, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Focus and Habits",
            "content": "Yale Video Takeaway . Laurie Santos’s speech on her new course in Yale Psychology and the Good Life talks about the mental struggles and issues that many people face in their day to day lives. Specifically, she talks about the younger generation, including undergraduates, high school students, and even middle school students. She focuses on how much mental health is important and is lacking for these groups. She also provides methods for increasing overall life happiness. Here are some key ideas from the video: . Money doesn&#39;t buy happiness. While it may sound cliche, studies find that it&#39;s true. Unless you&#39;re living under the national poverty line, and increase in salary does not directly equate to an increase in mental health. People have this false perception that if they just had more money, they would be happier in life. In reality, this increase in money does not allow you anything besides buying a nicer car or a bigger house, which both have nothing to do with how happy a person is. . Free time is important. Many students are filled with work and things that make them busy. This can cause a great deal of stress in one&#39;s life. It is necessary for one&#39;s mental health and well being to have time to relax and enjoy the moment. This is why practices such as meditation are so beneficial, as they allow one to take the time and release life stress. . Spending time socializing is helpful for a healthy mentality. While some people may feel as their time is best spent alone, it is a fact that happier people socialize more, and people who spend time by themselves tend to be less happy in life. Socializing does not mean social media or using the internet/phone. That creates the false reality of socialization, which does not benefit one as much as real life human interaction does. . Spending time in the present is often overlooked. Without realizing it, many people often carry out their daily tasks while subconsciously having their mind elsewhere. Even if its a boring task you&#39;re doing, such as work, it helps you to be in the moment and focus on it. This kind of mentality helps people feel more grateful for their lives and what they have. It shows people that it matters not where they were yesterday, not where they&#39;ll be tomorrow, but where they are now in life and what they have accomplish and can accomplish for themselves. . Sleep is key. This is an issue especially for many high schools students, who tend to not get enough sleep at night. While sleep is beneficial for your physical health, it is especially important for your mental health. Getting a good nights sleep allows you to be productive, happy, and healthy during the day. It relieves the stress and allows you to feel more at peace and relaxed with your life. . Goals for School . The mindset describes in the video is important for my personal life. I need to be able to work efficiently enough, providing myself with enough free time to spend relaxing, and enough time to sleep. My work conduct in school directly correlates to my stress levels. When I don&#39;t get work done at school, I have to spend personal time getting it done at home. With procrastination, I feel as if I am overwhelmed with work, which can be easily avoided. . This school year, I plan to lessen my procrastination and increase my focus while working in school. Whether that be by working together with others, or just sitting down and getting it done, I want to be able to make something of myself this year, and ease off on my stress every night. . CSA . In this class specifically, I have recently been struggling with my work conduct. When it&#39;s time to code code code, I often find my mind wandering off, leaving myself with little to no work done at the end of class. This may be a direct result of my lack of sleep. Overall, my goal is to get more work done every day and feel motivated every morning when I walk into class. . Being Grateful . Laurie Santos touched on the importance of being grateful for what you have in life. I would like to practice that and make it a habit to remind myself of the good things I have amongst all the stress I may feel. . I am grateful for being able to attend such a nice and privileged school I am grateful for having supporting parents who made me who I am today I am grateful for the friends I have that get me through the day I am grateful for all the opportunities I have in life to make something of myself .",
            "url": "https://nicholasramos5.github.io/VSCodings/pbl/college%20board/java/2022/09/12/Focus-Habits.html",
            "relUrl": "/pbl/college%20board/java/2022/09/12/Focus-Habits.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Objects Notebook",
            "content": "// imports allow you to use code already written by others. It is good to explore and learn libraries. The names around the dots often give you a hint to the originator of the code. import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // CLASS DEFINED // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object ( INSTANCE ) this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;- n&quot;); System.out.println(&quot;Choose from these choices&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - Say Hello&quot;); System.out.println(&quot;2 - Output colors&quot;); System.out.println(&quot;3 - Loading in color&quot;); System.out.println(&quot;4 - Salary Calculator&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } private void salaryCalculator(){ Scanner myObj = new Scanner(System.in); // Create a Scanner object ( INSTANCE ) System.out.println(&quot;Enter a salary between 0-1,000,000&quot;); // Number 1, gets salary double salary = myObj.nextDouble(); // Read user input System.out.println(salary); double oldSalary = salary; // records oldsalary for percent calculation later System.out.println(&quot;Enter your pay raise&quot;); // Number 2, gets raise to salary double raise = myObj.nextDouble(); // Read user input System.out.println(raise); salary += raise; // the inputted number of &quot;raise&quot; is added onto the original inputted &quot;salary&quot; int randomnum = (int)(Math.random() * 100); // use of math.random() salary += randomnum; // use of math.random to add random number into salary value int percent = (int) (100*(salary / oldSalary)-100); // calculates percent raise myObj.close(); // closing object, stops reading text inputs boolean payraisequality; // defines boolean variable String message; // defines message if(percent &gt; 5){ payraisequality = true; } else{ payraisequality = false; } if (payraisequality == true){ message = &quot;You got a good pay raise!&quot;; } else{ message = &quot;You got a bad pay raise.&quot;; } System.out.println(&quot;Your final salary, with an added random number, is: &quot; + salary + &quot;, which is around a &quot; + percent + &quot;% raise from your original salary. &quot; + message); // Output user input } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;Goodbye, World!&quot;); quit = true; break; case 1: System.out.print(&quot;Hello, World!&quot;); break; case 2: for(int i = 0; i &lt; COLORS.length; i++) // loop through COLORS array System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: System.out.print(&quot;Loading...&quot;); for (int i = 0; i &lt; 20; i++) { // fixed length loading bar int random = (int) (Math.random() * COLORS.length); // random logic (CHANGING FROM A DOUBLE TO AN INTEGER) try { Thread.sleep(100); // delay for loading } catch (Exception e) { System.out.println(e); } System.out.print(COLORS[random][ANSI] + &quot;#&quot;); } break; case 4: salaryCalculator(); // (METHOD) break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object (METHOD) } } Menu.main(null); . - Choose from these choices - 1 - Say Hello 2 - Output colors 3 - Loading in color 4 - Salary Calculator 0 - Quit - 4: Enter a salary between 0-1,000,000 1000.0 Enter your pay raise 30000.0 Your final salary, with an added random number, is: 31024.0, which is around a 3002% raise from your original salary. You got a good pay raise! 1: Hello, World! 0: Goodbye, World! . College Board and CTE competences . Explain where a Class is defined . &quot;public class Menu{ &quot; | . Explain where an instances of a Class is defined . &quot;Scanner sc = new Scanner(System.in);&quot; | &quot;Scanner myObj = new Scanner(System.in);&quot; | . Explain where an object is Calling a Method . &quot;new Menu();&quot; | . Explain where an object is Mutating data . &quot;(CHANGING FROM A DOUBLE TO AN INTEGER)&quot; | .",
            "url": "https://nicholasramos5.github.io/VSCodings/2022/09/05/Objects.html",
            "relUrl": "/2022/09/05/Objects.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Code.org Completion",
            "content": "I have completed Code.org unit 1! Here I will share some of what I have learned. . public class PainterPlus extends Painter{ public PainterPlus() { super(); } public void turnRight() { turnLeft(); turnLeft(); turnLeft(); } public void move(int blocks) { for(int i = 0; i &lt; blocks; i++) { move(); paint(&quot;white&quot;); } } } . In this example, &#39;PainterPlus&#39; is a subclass of the superclass &#39;Painter&#39;. PainterPlus extends Painter, meaning PainterPlus inherits the characteristics of the preset class Painter. With this subclass, I can create constructors and methods to alternate the actions of the Painter. . Lines 2 and 3 represent the constructor signature. Constructors are a special type of method invoked to create objects from a class. . &#39;turnRight&#39; and &#39;move&#39; represent methods, or blocks of codes that only run when called upon. . public class MyNeighborhood { public static void main(String[] args) { // Lesson 6 Level 3 // TO DO #1: Instantiate a PainterPlus object. PainterPlus myPainterPlus = new PainterPlus(); myPainterPlus.move(3); myPainterPlus.turnRight(); myPainterPlus.move(2); // Lesson 7 Level 2 // TO DO #1: Navigate the PainterPlus object // to the traffic cone. } } . Here, I have instantiated an object called &quot;myPainterPlus&quot;, which has a behavior displayed upon by the objects. The object follows the given commands written below it. .",
            "url": "https://nicholasramos5.github.io/VSCodings/pbl/college%20board/java/2022/09/05/Code-org.html",
            "relUrl": "/pbl/college%20board/java/2022/09/05/Code-org.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Title",
            "content": "This is objects . public class Cool { String Height = &quot;very tall&quot;; int age = 16; } public class Main { public static void main(String[] args) { Cool myBeans = new Cool(); System.out.println(&quot;My height is &quot; + myBeans.Height); System.out.println(&quot;My age is &quot; + myBeans.age); } } Main.main(null) . My height is very tall My age is 16 . import java.util.Scanner; public class GuessingGame { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); double a = (1 + Math.random() * 100); int b = ((int) Math.floor(a)); Integer c = 0; System.out.println(&quot;What is the number?&quot;); c = scanner.nextInt(); while (!c.equals(b)) { System.out.println( c + &quot; was not the number&quot;); if (c &gt; b) { System.out.println(&quot;lower n&quot;); } if (c &lt; b) { System.out.println(&quot;higher n&quot;); } c = scanner.nextInt(); } if (c == b) { System.out.println(&quot;You guessed it! The number was &quot; + b); } } } .",
            "url": "https://nicholasramos5.github.io/VSCodings/2022/09/02/Java-Objects.html",
            "relUrl": "/2022/09/02/Java-Objects.html",
            "date": " • Sep 2, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Title",
            "content": "{ &quot;cells&quot;: [ { &quot;cell_type&quot;: &quot;markdown&quot;, &quot;metadata&quot;: {}, &quot;source&quot;: [ &quot;# &quot;Java Primitives Notebook &quot; n&quot;, &quot;&gt; &quot;Captures Key Learnings of Primitives &quot; n&quot;, &quot; n&quot;, &quot;- toc: true n&quot;, &quot;- branch: master n&quot;, &quot;- badges: true n&quot;, &quot;- comments: true n&quot;, &quot;- categories: [KeyLearnings]&quot; ] }, { &quot;cell_type&quot;: &quot;markdown&quot;, &quot;metadata&quot;: {}, &quot;source&quot;: [ &quot;- Define in a Class the following data types n&quot;, &quot;- Demonstrate use of Primitives: int, double, boolean, string n&quot;, &quot;- Demonstrate use of Wrapper Class object: String n&quot;, &quot;- Describe in comments how each data type choice is appropriate to application n&quot;, &quot;- Perform arithmetic expressions and assignment in a program code Code.org Lesson n&quot;, &quot;- Determine what is result is in a variable as a result of an data type and expression (ie integer vs double) n&quot;, &quot;- Perform an arithmetic expressions that uses casting, add comments that show how it produces desired result. Learn more by watching this College Board video n&quot;, &quot;- Perform compound assignment operator (ie +=), add comments to describe the result of operator n&quot;, &quot; n&quot;, &quot;Code below, Collaborated with Don Tran&quot; ] }, ] } . | &#34;cells&#34;: [ not a statement | &#34;cells&#34;: [ &#39;;&#39; expected | &#34;cell_type&#34;: &#34;markdown&#34;, not a statement | &#34;cell_type&#34;: &#34;markdown&#34;, &#39;;&#39; expected | &#34;metadata&#34;: {}, illegal start of expression | }, illegal start of expression | &#34;cell_type&#34;: &#34;markdown&#34;, not a statement | &#34;cell_type&#34;: &#34;markdown&#34;, &#39;;&#39; expected | &#34;metadata&#34;: {}, illegal start of expression | }, illegal start of expression .",
            "url": "https://nicholasramos5.github.io/VSCodings/2022/08/28/javaclasses.html",
            "relUrl": "/2022/08/28/javaclasses.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Title",
            "content": "Define in a Class the following data types | Demonstrate use of Primitives: int, double, boolean, string | Demonstrate use of Wrapper Class object: String | Describe in comments how each data type choice is appropriate to application | Perform arithmetic expressions and assignment in a program code Code.org Lesson | Determine what is result is in a variable as a result of an data type and expression (ie integer vs double) | Perform an arithmetic expressions that uses casting, add comments that show how it produces desired result. Learn more by watching this College Board video | Perform compound assignment operator (ie +=), add comments to describe the result of operator | . import java.util.Scanner; public class Kitkatwrapper{ public static void main(String[] args) { Scanner myObj = new Scanner(System.in); // Create a Scanner object System.out.println(&quot;Enter a salary between 0-1,000,000&quot;); // Number 1, gets salary double salary = myObj.nextDouble(); // Read user input double oldSalary = salary; // records oldsalary for percent calculation later System.out.println(&quot;Enter your pay raise&quot;); // Number 2, gets raise to salary double raise = myObj.nextDouble(); // Read user input salary += raise; // the inputted number of &quot;raise&quot; is added onto the original inputted &quot;salary&quot; int percent = (int) (100*(salary / oldSalary)-100); // calculates percent raise myObj.close(); // closing object, stops reading text inputs boolean payraisequality; // defines boolean variable String message; // defines message if(percent &gt; 5){ payraisequality = true; } else{ payraisequality = false; } if (payraisequality == true){ message = &quot;You got a good pay raise!&quot;; } else{ message = &quot;You got a bad pay raise.&quot;; } System.out.println(&quot;Your final salary is: &quot; + salary + &quot;, which is around a &quot; + percent + &quot;% raise from your original salary. &quot; + message); // Output user input } } Kitkatwrapper.main(null); . Enter a salary between 0-1,000,000 Enter your pay raise Your final salary is: 200050.0, which is around a 0% raise from your original salary. You got a bad pay raise. .",
            "url": "https://nicholasramos5.github.io/VSCodings/2022/08/26/Primitives-Notebook.html",
            "relUrl": "/2022/08/26/Primitives-Notebook.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Title",
            "content": "Bash Installation Checks . toc: true | badges: true | comments: true | categories: [jupyter] | . Checking if Java and Anaconda are installed . echo &quot;Lets check if Java is installed&quot; java --version echo &quot;&quot; echo &quot;Lets check if Annaconda is installed&quot; conda list . Lets check if Java is installed openjdk 11.0.16.1 2022-08-12 OpenJDK Runtime Environment Temurin-11.0.16.1+1 (build 11.0.16.1+1) OpenJDK 64-Bit Server VM Temurin-11.0.16.1+1 (build 11.0.16.1+1, mixed mode) Lets check if Annaconda is installed # packages in environment at /Users/nicholasramos/opt/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39hecd8cb5_1 aiohttp 3.8.1 py39hca72f7f_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39hecd8cb5_0 anaconda-navigator 2.1.4 py39hecd8cb5_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39hecd8cb5_0 appdirs 1.4.4 pyhd3eb1b0_0 applaunchservices 0.2.1 pyhd3eb1b0_0 appnope 0.1.2 py39hecd8cb5_1001 appscript 1.1.2 py39h9ed2024_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39hca72f7f_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39hecd8cb5_0 astropy 5.0.4 py39h67323c0_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39h9ed2024_0 beautifulsoup4 4.11.1 py39hecd8cb5_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39hca72f7f_0 bkcharts 0.2 py39hecd8cb5_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h2842e9f_0 bokeh 2.4.2 py39hecd8cb5_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39h67323c0_0 brotli 1.0.9 hb1e8313_2 brotlipy 0.7.0 py39h9ed2024_1003 brunsli 0.1 h23ab428_0 bzip2 1.0.8 h1de35cc_0 c-ares 1.18.1 hca72f7f_0 ca-certificates 2022.3.29 hecd8cb5_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39hecd8cb5_2 cffi 1.15.0 py39hc55c11b_1 cfitsio 3.470 hee0f690_6 chardet 4.0.0 py39hecd8cb5_1003 charls 2.2.0 h23ab428_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39hecd8cb5_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39hecd8cb5_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.14.0 py39hecd8cb5_0 conda-build 3.21.8 py39hecd8cb5_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39hca72f7f_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39h2fd3fbb_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 hca72f7f_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39he9d5cce_0 cytoolz 0.11.0 py39h9ed2024_0 daal4py 2021.5.0 py39h24a4e90_0 dal 2021.5.0 hecd8cb5_782 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39hecd8cb5_1 debugpy 1.5.1 py39he9d5cce_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39hecd8cb5_1 entrypoints 0.4 py39hecd8cb5_0 et_xmlfile 1.1.0 py39hecd8cb5_0 executing 0.8.3 pyhd3eb1b0_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 hd8bbffd_0 frozenlist 1.2.0 py39hca72f7f_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39hecd8cb5_1 gensim 4.1.2 py39he9d5cce_0 giflib 5.2.1 haf1e3a3_0 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h23ab428_2 gmpy2 2.1.2 py39hd5de756_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h9ed2024_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39hecd8cb5_0 greenlet 1.1.1 py39h23ab428_0 grpcio 1.42.0 py39ha29bfda_0 h5py 3.6.0 py39h4a1dd59_0 hdf5 1.10.6 hdbbcd12_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 h0a44026_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39ha952a84_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39hecd8cb5_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39hecd8cb5_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 hecd8cb5_3538 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39hecd8cb5_0 ipython 8.2.0 py39hecd8cb5_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39hecd8cb5_1 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e hca72f7f_0 jq 1.6 h9ed2024_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39hecd8cb5_0 jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 haf1e3a3_2 keyring 23.4.0 py39hecd8cb5_0 kiwisolver 1.3.2 py39he9d5cce_0 krb5 1.19.2 hcd88c3b_0 lazy-object-proxy 1.6.0 py39h9ed2024_0 lcms2 2.12 hf1fd2bf_0 lerc 3.0 he9d5cce_0 libaec 1.0.4 hb1e8313_1 libarchive 3.4.2 haa3ed63_0 libcrc32c 1.1.1 hb1e8313_2 libcurl 7.82.0 h6dfd666_0 libcxx 12.0.0 h2f01273_0 libdeflate 1.8 h9ed2024_5 libedit 3.1.20210910 hca72f7f_0 libev 4.33 h9ed2024_1 libffi 3.3 hb1e8313_2 libgfortran 3.0.1 h93005f0_2 libiconv 1.16 hca72f7f_2 libidn2 2.3.2 h9ed2024_0 liblief 0.11.5 he9d5cce_1 libllvm11 11.1.0 h46f1229_1 libnghttp2 1.46.0 ha29bfda_0 libpng 1.6.37 ha441bb4_0 libprotobuf 3.19.1 h8346a28_0 libsodium 1.0.18 h1de35cc_0 libspatialindex 1.9.3 h23ab428_0 libssh2 1.10.0 h0a4fc7d_0 libtiff 4.2.0 h87d7836_0 libunistring 0.9.10 h9ed2024_0 libwebp 1.2.2 h56c3ce4_0 libwebp-base 1.2.2 hca72f7f_0 libxml2 2.9.12 hcdb78fc_0 libxslt 1.1.34 h83b36ba_0 libzopfli 1.0.3 hb1e8313_0 llvm-openmp 12.0.0 h0dcd299_1 llvmlite 0.38.0 py39h8346a28_0 locket 0.2.1 py39hecd8cb5_2 lxml 4.8.0 py39h65b224f_0 lz4-c 1.9.3 h23ab428_1 lzo 2.10 haf1e3a3_2 markdown 3.3.4 py39hecd8cb5_0 markupsafe 2.0.1 py39h9ed2024_0 matplotlib 3.5.1 py39hecd8cb5_1 matplotlib-base 3.5.1 py39hfb0c5b7_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39hecd8cb5_1 mistune 0.8.4 py39h9ed2024_1000 mkl 2021.4.0 hecd8cb5_637 mkl-service 2.4.0 py39h9ed2024_0 mkl_fft 1.3.1 py39h4ab4a9b_0 mkl_random 1.2.2 py39hb2f4e1b_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h6ef4df4_1 mpfr 4.0.2 h9066e36_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39hecd8cb5_0 msgpack-python 1.0.2 py39hf7b0b51_1 multidict 5.2.0 py39hca72f7f_2 multipledispatch 0.6.0 py39hecd8cb5_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39hecd8cb5_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39hecd8cb5_0 nbconvert 6.4.4 py39hecd8cb5_0 nbformat 5.3.0 py39hecd8cb5_0 ncurses 6.3 hca72f7f_2 nest-asyncio 1.5.5 py39hecd8cb5_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 10.13.0 h0a44026_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39hecd8cb5_0 numba 0.55.1 py39hae1ba45_0 numexpr 2.8.1 py39h2e5f0a9_0 numpy 1.21.5 py39h2e5f0a9_1 numpy-base 1.21.5 py39h3b1a694_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h9ed2024_0 openjpeg 2.4.0 h66ea3da_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n hca72f7f_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39he9d5cce_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39hecd8cb5_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39hecd8cb5_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 pathspec 0.7.0 py_0 patsy 0.5.2 py39hecd8cb5_1 pep8 1.7.1 py39hecd8cb5_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39hde71d04_0 pip 21.2.4 py39hecd8cb5_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39hecd8cb5_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39he9d5cce_0 psutil 5.8.0 py39h9ed2024_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39he9d5cce_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h9ed2024_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39hecd8cb5_0 pycurl 7.44.1 py39hbcfaee0_1 pydispatcher 2.0.5 py39hecd8cb5_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h9ed2024_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39hecd8cb5_0 pylint 2.9.6 py39hecd8cb5_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39he9d5cce_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h23ab428_6 pyrsistent 0.18.0 py39hca72f7f_0 pysocks 1.7.1 py39hecd8cb5_0 pytables 3.6.1 py39h648f197_1 pytest 7.1.1 py39hecd8cb5_0 python 3.9.12 hdfd78df_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h23ab428_3 python.app 3 py39hca72f7f_0 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39hca72f7f_0 pyyaml 6.0 py39hca72f7f_1 pyzmq 22.3.0 py39he9d5cce_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h468cd18_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39hecd8cb5_0 readline 8.1.2 hca72f7f_1 regex 2022.3.15 py39hca72f7f_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39hecd8cb5_1 ruamel_yaml 0.15.100 py39h9ed2024_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39hae1ba45_0 scikit-learn 1.0.2 py39hae1ba45_1 scikit-learn-intelex 2021.5.0 py39hecd8cb5_0 scipy 1.7.3 py39h8c7af03_0 scrapy 2.6.1 py39hecd8cb5_0 seaborn 0.11.2 pyhd3eb1b0_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39hecd8cb5_0 sip 4.19.13 py39h23ab428_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 he9d5cce_0 sniffio 1.2.0 py39hecd8cb5_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39hecd8cb5_1 spyder-kernels 2.1.3 py39hecd8cb5_0 sqlalchemy 1.4.32 py39hca72f7f_0 sqlite 3.38.2 h707629a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39hca72f7f_0 sympy 1.10.1 py39hecd8cb5_0 tabulate 0.8.9 py39hecd8cb5_0 tbb 2021.5.0 haf03e11_0 tbb4py 2021.5.0 py39haf03e11_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39hecd8cb5_0 terminado 0.13.1 py39hecd8cb5_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h7bc2e8c_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h9ed2024_0 tqdm 4.64.0 py39hecd8cb5_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39hca72f7f_0 typed-ast 1.4.3 py39h9ed2024_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39he9d5cce_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 haf1e3a3_0 urllib3 1.26.9 py39hecd8cb5_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h999c104_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39hecd8cb5_1 websocket-client 0.58.0 py39hecd8cb5_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h6dfd666_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39hecd8cb5_0 wrapt 1.12.1 py39h9ed2024_1 wurlitzer 3.0.2 py39hecd8cb5_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xlwings 0.24.9 py39hecd8cb5_0 xz 5.2.5 h1de35cc_0 yaml 0.2.5 haf1e3a3_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h9ed2024_0 zeromq 4.3.4 h23ab428_0 zfp 0.5.5 he9d5cce_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h4dc903c_2 zope 1.0 py39hecd8cb5_1 zope.interface 5.4.0 py39h9ed2024_0 zstd 1.4.9 h322a384_0 . Updating a repository . export repository=VSCodings cd $HOME/$repository git fetch origin git pull origin master . From https://github.com/NicholasRamos5/VSCodings * branch master -&gt; FETCH_HEAD Already up to date. . Doing some Installations . Automate some of the installations for git, python, and java . arch -arm64 brew list arch -arm64 brew update arch -arm64 brew upgrade arch -arm64 brew install git arch -arm64 brew install python python --version arch -arm64 brew install java java --version javac --version . ==&gt; Formulae bdw-gc gmp libidn2 mpdecimal pkg-config ca-certificates gnutls libnghttp2 nettle python@3.10 emacs guile libtasn1 openjdk readline gdbm jansson libtool openssl@1.1 sqlite gettext libevent libunistring p11-kit unbound git libffi m4 pcre2 xz Updated 1 tap (homebrew/core). ==&gt; New Formulae agg ==&gt; Outdated Formulae bdw-gc guile libnghttp2 libtasn1 openjdk p11-kit You have 6 outdated formulae installed. You can upgrade them with brew upgrade or list them with brew outdated. ==&gt; Upgrading 6 outdated packages: bdw-gc 8.0.6 -&gt; 8.2.2 libnghttp2 1.48.0 -&gt; 1.49.0 openjdk 18.0.2 -&gt; 18.0.2.1 libtasn1 4.18.0 -&gt; 4.19.0 guile 3.0.8 -&gt; 3.0.8_2 p11-kit 0.24.1 -&gt; 0.24.1_1 ==&gt; Downloading https://ghcr.io/v2/homebrew/core/openjdk/manifests/18.0.2.1 Already downloaded: /Users/nicholasramos/Library/Caches/Homebrew/downloads/d1707cfc8fd479092c09b9e973cf8d728e04c0d4f42ed68d0952afd112198bc6--openjdk-18.0.2.1.bottle_manifest.json ==&gt; Downloading https://ghcr.io/v2/homebrew/core/openjdk/blobs/sha256:373ac8b65d Already downloaded: /Users/nicholasramos/Library/Caches/Homebrew/downloads/39fce67446ce41cbab8c6cac31ba67f0e7f8a0544522f358044927f6c26960a2--openjdk--18.0.2.1.arm64_monterey.bottle.tar.gz Error: SHA256 mismatch Expected: 373ac8b65daa370d2743649a606c96e0bccba510ebc7f47173c4c023f79d5378 Actual: b67e96fedb50f9a10c03e3ffbfcd2b18a8fd5646ab037e8f9c988389a781f4f7 File: /Users/nicholasramos/Library/Caches/Homebrew/downloads/39fce67446ce41cbab8c6cac31ba67f0e7f8a0544522f358044927f6c26960a2--openjdk--18.0.2.1.arm64_monterey.bottle.tar.gz To retry an incomplete download, remove the file above. Warning: git 2.37.2 is already installed and up-to-date. To reinstall 2.37.2, run: brew reinstall git Warning: python@3.10 3.10.6_1 is already installed and up-to-date. To reinstall 3.10.6_1, run: brew reinstall python@3.10 Python 3.9.12 openjdk is already installed but outdated (so it will be upgraded). ==&gt; Downloading https://ghcr.io/v2/homebrew/core/openjdk/manifests/18.0.2.1 Already downloaded: /Users/nicholasramos/Library/Caches/Homebrew/downloads/d1707cfc8fd479092c09b9e973cf8d728e04c0d4f42ed68d0952afd112198bc6--openjdk-18.0.2.1.bottle_manifest.json ==&gt; Downloading https://ghcr.io/v2/homebrew/core/openjdk/blobs/sha256:373ac8b65d Already downloaded: /Users/nicholasramos/Library/Caches/Homebrew/downloads/39fce67446ce41cbab8c6cac31ba67f0e7f8a0544522f358044927f6c26960a2--openjdk--18.0.2.1.arm64_monterey.bottle.tar.gz Error: openjdk: SHA256 mismatch Expected: 373ac8b65daa370d2743649a606c96e0bccba510ebc7f47173c4c023f79d5378 Actual: b67e96fedb50f9a10c03e3ffbfcd2b18a8fd5646ab037e8f9c988389a781f4f7 File: /Users/nicholasramos/Library/Caches/Homebrew/downloads/39fce67446ce41cbab8c6cac31ba67f0e7f8a0544522f358044927f6c26960a2--openjdk--18.0.2.1.arm64_monterey.bottle.tar.gz To retry an incomplete download, remove the file above. openjdk 11.0.16.1 2022-08-12 OpenJDK Runtime Environment Temurin-11.0.16.1+1 (build 11.0.16.1+1) OpenJDK 64-Bit Server VM Temurin-11.0.16.1+1 (build 11.0.16.1+1, mixed mode) javac 11.0.16.1 . Verify Installations . java --version python --version javac --version node --version . openjdk 11.0.16.1 2022-08-12 OpenJDK Runtime Environment Temurin-11.0.16.1+1 (build 11.0.16.1+1) OpenJDK 64-Bit Server VM Temurin-11.0.16.1+1 (build 11.0.16.1+1, mixed mode) Python 3.9.12 javac 11.0.16.1 v10.13.0 . Verify all kernels installed for Jupyter . jupyter kernelspec list . Available kernels: python2718jvsc74a57bd0949777d72b0d2535278d3dc13498b2535136f6dfe0678499012e853ee9abcab1 /Users/nicholasramos/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python2718jvsc74a57bd0949777d72b0d2535278d3dc13498b2535136f6dfe0678499012e853ee9abcab1 python3106jvsc74a57bd0b0fa6594d8f4cbf19f97940f81e996739fb7646882a419484c72d19e05852a7e /Users/nicholasramos/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python3106jvsc74a57bd0b0fa6594d8f4cbf19f97940f81e996739fb7646882a419484c72d19e05852a7e python3912jvsc74a57bd01392cfe1d2907c9898063b417212eb4aacd4d21f15f27446a8daa8f6216b3201 /Users/nicholasramos/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python3912jvsc74a57bd01392cfe1d2907c9898063b417212eb4aacd4d21f15f27446a8daa8f6216b3201 bash /Users/nicholasramos/Library/Jupyter/kernels/bash java /Users/nicholasramos/Library/Jupyter/kernels/java javascript /Users/nicholasramos/Library/Jupyter/kernels/javascript python3 /Users/nicholasramos/opt/anaconda3/share/jupyter/kernels/python3 .",
            "url": "https://nicholasramos5.github.io/VSCodings/2022/08/26/Bash-Note.html",
            "relUrl": "/2022/08/26/Bash-Note.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "If and Else Statements (Booleans)",
            "content": "Booleans . A Boolean expression is a logical statement that can be evaluated to True or False. A Boolean expression may be composed of a combination of the Boolean constants true or false. . Assigned as variables: . boolean a = true; boolean b = false; System.out.println(&quot;variable a: &quot; + a + &quot; nvariable b: &quot; + b); . variable a: true variable b: false . Boolean Operators . There are three basic boolean operators. They are AND (&amp;&amp;), OR (||), and NOT (!). . With AND, both (all) statements must be true to produce and output of true. . With OR, only one of the statements must be true to produce and output of true. . With NOT, boolean outputs are reversed (true is false, false is true). . There are also comparison operators, which include the mathematical symbols &gt;, &lt;, &gt;=, &lt;=, and ==. These operators compare the numerical value of two numbers (integers or doubles), and provides a boolean output as to whether or not the statement is true or not. . Let&#39;s see these operators in some code. . boolean a = true &amp;&amp; true; //both are true boolean b = true &amp;&amp; false; //not both are true boolean c = true || false; //one is true boolean d = false || false; //neither are true boolean e = !true; // opposite of true System.out.println(&quot;variable a: &quot; + a + &quot; nvariable b: &quot; + b + &quot; nvariable c: &quot; + c + &quot; nvariable d: &quot; + d + &quot; nvariable e: &quot; + e); . variable a: true variable b: false variable c: true variable d: false variable e: false . boolean a = 5 &gt; 1; //true statement boolean b = 10 &lt; 3; //false statement boolean c = 7 &gt;= 7; //true statement System.out.println(&quot;variable a: &quot; + a + &quot; nvariable b: &quot; + b + &quot; nvariable c: &quot; + c); . variable a: true variable b: false variable c: true . If and Else Statements . If statements are statements that check if a condition is true or false. If a condition is true, it will perform an action/line of code it contains, if it is false, it will skip over the action/code block under the if statement. . An Else statements is an action/code block that performs if and only if the condition for the if statement is not true (false). . An Else If statement is a combination of If and Else statements where if a condition is not true, it will move into the else statement which has another if statement. . int a = 3; int b = 8; int c = 10; if (a &gt; b) { //this is false, so this code is ignored, else statement is followed if (a &gt; c){ System.out.println(&quot;a is the greatest number&quot;); } else { System.out.println(&quot;c is the greatesst number&quot;); } } else { //since if was false, &quot;else&quot; is true if (b &gt; c) {//this is false, so this code is ignored, else statement is followed System.out.println(&quot;b is the greatest number&quot;); } else { //if was false, this code is followed System.out.println(&quot;c is the greatest number&quot;); } } . c is the greatest number . Switch Case Statements . Switch Case Statements help simplify/manage the complexity of if else statements. Unlike if-then and if-then-else statements, the switch statement can have a number of possible execution paths. . It works by stating a variety of Case statements which all have conditions. The code blocks under each case are then run if the condition to one of the cases is met. Just like if else statements, Switch Case statements will go down each case to see if a condition is met. If it is met, the case&#39;s block of code will run and ignore the rest of the Switch Case statements (assuming each case is ended with a break statement). . int n = 3; String output; switch (n) { //variable passed in case 1: //condition checked if equals output = &quot;the number is 1&quot;; break; case 2: output = &quot;the number is 2&quot;; break; case 3: output = &quot;the number is 3&quot;; break; case 4: output = &quot;the number is 4&quot;; break; } System.out.println(output); . the number is 3 . The break statement is crucial, as it terminates the enclosing switch statement. The break statements are necessary because without them, statements in switch blocks fall through: All statements after the matching case label are executed in sequence, regardless of the expression of subsequent case labels, until a break statement is encountered . This is an example without break statements. . int n = 3; String output; switch (n) { case 1: output = &quot;the number is 1&quot;; case 2: output = &quot;the number is 2&quot;; case 3: output = &quot;the number is 3&quot;; case 4: output = &quot;the number is 4&quot;; } System.out.println(output); . the number is 4 . De Morgan&#39;s Law . De Morgan&#39;s Law states that in a boolean statement, the not operator ! will reverse all the operators in that statement. For instance, true becomes false, false becomes true, and becomes or, or becomes and, &gt; becomes &lt;=, &lt;= becomes &gt;, etc. . De Morgan&#39;s Law defines how we can negate an AND statement and how we can negate an OR statement. . !(a &amp;&amp; b) is equivalent to !a || !b !(a || b) is equivalent to !a &amp;&amp; !b . where a and b are boolean values . For example, the statements &quot;I don&#39;t like chocolate or vanilla&#39;&#39; and &quot;I do not like chocolate and I do not like vanilla&#39;&#39; clearly express the same thought. . Example code: . boolean a = true; boolean b = false; if (!(a || b)){ System.out.println(&quot;A and B both are false&quot;); } else{ System.out.println(&quot;A and B are true&quot;); } . A and B are true . boolean a = true; boolean b = false; if (!a &amp;&amp; !b){ System.out.println(&quot;A and B both are false&quot;); } else{ System.out.println(&quot;A and B are true&quot;); } . A and B are true . As shown above, both statements are equal given De Morgan&#39;s Law. It&#39;s important because of how they can break inversions as a complement of a complex boolean expression. .",
            "url": "https://nicholasramos5.github.io/VSCodings/pbl/college%20board/java/2020/09/12/Boolean.html",
            "relUrl": "/pbl/college%20board/java/2020/09/12/Boolean.html",
            "date": " • Sep 12, 2020"
        }
        
    
  
    
        ,"post25": {
            "title": "Title",
            "content": "{ &quot;cells&quot;: [ { &quot;cell_type&quot;: &quot;markdown&quot;, &quot;metadata&quot;: {}, &quot;source&quot;: [ &quot;# &quot;Bash Notebook &quot; n&quot;, &quot;&gt; &quot;Key Tools for Bash proof &quot; n&quot;, &quot; n&quot;, &quot;- toc: true n&quot;, &quot;- branch: master n&quot;, &quot;- badges: true n&quot;, &quot;- comments: true n&quot;, &quot;- categories: [KeyLearnings]&quot; ] }, { &quot;cell_type&quot;: &quot;markdown&quot;, &quot;metadata&quot;: {}, &quot;source&quot;: [ &quot;# Checking if Java and Anaconda are installed&quot; ] }, { &quot;cell_type&quot;: &quot;code&quot;, &quot;execution_count&quot;: 1, &quot;metadata&quot;: { &quot;vscode&quot;: { &quot;languageId&quot;: &quot;shellscript&quot; } }, &quot;outputs&quot;: [ { &quot;name&quot;: &quot;stdout&quot;, &quot;output_type&quot;: &quot;stream&quot;, &quot;text&quot;: [ &quot;Lets check if Java is installed n&quot;, &quot;java 18.0.2.1 2022-08-18 n&quot;, &quot;Java(TM) SE Runtime Environment (build 18.0.2.1+1-1) n&quot;, &quot;Java HotSpot(TM) 64-Bit Server VM (build 18.0.2.1+1-1, mixed mode, sharing) n&quot;, &quot; n&quot;, &quot;Lets check if Annaconda is installed n&quot;, &quot;# packages in environment at /Users/nathanmanangan/opt/anaconda3: n&quot;, &quot;# n&quot;, &quot;# Name Version Build Channel n&quot;, &quot;_ipyw_jlab_nb_ext_conf 0.1.0 py39hecd8cb5_1 n&quot;, &quot;aiohttp 3.8.1 py39hca72f7f_1 n&quot;, &quot;aiosignal 1.2.0 pyhd3eb1b0_0 n&quot;, &quot;alabaster 0.7.12 pyhd3eb1b0_0 n&quot;, &quot;anaconda 2022.05 py39_0 n&quot;, &quot;anaconda-client 1.9.0 py39hecd8cb5_0 n&quot;, &quot;anaconda-navigator 2.1.4 py39hecd8cb5_0 n&quot;, &quot;anaconda-project 0.10.2 pyhd3eb1b0_0 n&quot;, &quot;anyio 3.5.0 py39hecd8cb5_0 n&quot;, &quot;appdirs 1.4.4 pyhd3eb1b0_0 n&quot;, &quot;applaunchservices 0.2.1 pyhd3eb1b0_0 n&quot;, &quot;appnope 0.1.2 py39hecd8cb5_1001 n&quot;, &quot;appscript 1.1.2 py39h9ed2024_0 n&quot;, &quot;argon2-cffi 21.3.0 pyhd3eb1b0_0 n&quot;, &quot;argon2-cffi-bindings 21.2.0 py39hca72f7f_0 n&quot;, &quot;arrow 1.2.2 pyhd3eb1b0_0 n&quot;, &quot;astroid 2.6.6 py39hecd8cb5_0 n&quot;, &quot;astropy 5.0.4 py39h67323c0_0 n&quot;, &quot;asttokens 2.0.5 pyhd3eb1b0_0 n&quot;, &quot;async-timeout 4.0.1 pyhd3eb1b0_0 n&quot;, &quot;atomicwrites 1.4.0 py_0 n&quot;, &quot;attrs 21.4.0 pyhd3eb1b0_0 n&quot;, &quot;automat 20.2.0 py_0 n&quot;, &quot;autopep8 1.6.0 pyhd3eb1b0_0 n&quot;, &quot;babel 2.9.1 pyhd3eb1b0_0 n&quot;, &quot;backcall 0.2.0 pyhd3eb1b0_0 n&quot;, &quot;backports 1.1 pyhd3eb1b0_0 n&quot;, &quot;backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 n&quot;, &quot;backports.tempfile 1.0 pyhd3eb1b0_1 n&quot;, &quot;backports.weakref 1.0.post1 py_1 n&quot;, &quot;bash-kernel 0.7.2 pypi_0 pypi n&quot;, &quot;bcrypt 3.2.0 py39h9ed2024_0 n&quot;, &quot;beautifulsoup4 4.11.1 py39hecd8cb5_0 n&quot;, &quot;binaryornot 0.4.4 pyhd3eb1b0_1 n&quot;, &quot;bitarray 2.4.1 py39hca72f7f_0 n&quot;, &quot;bkcharts 0.2 py39hecd8cb5_0 n&quot;, &quot;black 19.10b0 py_0 n&quot;, &quot;blas 1.0 mkl n&quot;, &quot;bleach 4.1.0 pyhd3eb1b0_0 n&quot;, &quot;blosc 1.21.0 h2842e9f_0 n&quot;, &quot;bokeh 2.4.2 py39hecd8cb5_0 n&quot;, &quot;boto3 1.21.32 pyhd3eb1b0_0 n&quot;, &quot;botocore 1.24.32 pyhd3eb1b0_0 n&quot;, &quot;bottleneck 1.3.4 py39h67323c0_0 n&quot;, &quot;brotli 1.0.9 hb1e8313_2 n&quot;, &quot;brotlipy 0.7.0 py39h9ed2024_1003 n&quot;, &quot;brunsli 0.1 h23ab428_0 n&quot;, &quot;bzip2 1.0.8 h1de35cc_0 n&quot;, &quot;c-ares 1.18.1 hca72f7f_0 n&quot;, &quot;ca-certificates 2022.3.29 hecd8cb5_1 n&quot;, &quot;cachetools 4.2.2 pyhd3eb1b0_0 n&quot;, &quot;certifi 2021.10.8 py39hecd8cb5_2 n&quot;, &quot;cffi 1.15.0 py39hc55c11b_1 n&quot;, &quot;cfitsio 3.470 hee0f690_6 n&quot;, &quot;chardet 4.0.0 py39hecd8cb5_1003 n&quot;, &quot;charls 2.2.0 h23ab428_0 n&quot;, &quot;charset-normalizer 2.0.4 pyhd3eb1b0_0 n&quot;, &quot;click 8.0.4 py39hecd8cb5_0 n&quot;, &quot;cloudpickle 2.0.0 pyhd3eb1b0_0 n&quot;, &quot;clyent 1.2.2 py39hecd8cb5_1 n&quot;, &quot;colorama 0.4.4 pyhd3eb1b0_0 n&quot;, &quot;colorcet 2.0.6 pyhd3eb1b0_0 n&quot;, &quot;conda 4.13.0 py39hecd8cb5_0 n&quot;, &quot;conda-build 3.21.8 py39hecd8cb5_2 n&quot;, &quot;conda-content-trust 0.1.1 pyhd3eb1b0_0 n&quot;, &quot;conda-env 2.6.0 1 n&quot;, &quot;conda-pack 0.6.0 pyhd3eb1b0_0 n&quot;, &quot;conda-package-handling 1.8.1 py39hca72f7f_0 n&quot;, &quot;conda-repo-cli 1.0.4 pyhd3eb1b0_0 n&quot;, &quot;conda-token 0.3.0 pyhd3eb1b0_0 n&quot;, &quot;conda-verify 3.4.2 py_1 n&quot;, &quot;constantly 15.1.0 pyh2b92418_0 n&quot;, &quot;cookiecutter 1.7.3 pyhd3eb1b0_0 n&quot;, &quot;cryptography 3.4.8 py39h2fd3fbb_0 n&quot;, &quot;cssselect 1.1.0 pyhd3eb1b0_0 n&quot;, &quot;curl 7.82.0 hca72f7f_0 n&quot;, &quot;cycler 0.11.0 pyhd3eb1b0_0 n&quot;, &quot;cython 0.29.28 py39he9d5cce_0 n&quot;, &quot;cytoolz 0.11.0 py39h9ed2024_0 n&quot;, &quot;daal4py 2021.5.0 py39h24a4e90_0 n&quot;, &quot;dal 2021.5.0 hecd8cb5_782 n&quot;, &quot;dask 2022.2.1 pyhd3eb1b0_0 n&quot;, &quot;dask-core 2022.2.1 pyhd3eb1b0_0 n&quot;, &quot;dataclasses 0.8 pyh6d0b6a4_7 n&quot;, &quot;datashader 0.13.0 pyhd3eb1b0_1 n&quot;, &quot;datashape 0.5.4 py39hecd8cb5_1 n&quot;, &quot;debugpy 1.5.1 py39he9d5cce_0 n&quot;, &quot;decorator 5.1.1 pyhd3eb1b0_0 n&quot;, &quot;defusedxml 0.7.1 pyhd3eb1b0_0 n&quot;, &quot;diff-match-patch 20200713 pyhd3eb1b0_0 n&quot;, &quot;distributed 2022.2.1 pyhd3eb1b0_0 n&quot;, &quot;docutils 0.17.1 py39hecd8cb5_1 n&quot;, &quot;entrypoints 0.4 py39hecd8cb5_0 n&quot;, &quot;et_xmlfile 1.1.0 py39hecd8cb5_0 n&quot;, &quot;executing 0.8.3 pyhd3eb1b0_0 n&quot;, &quot;filelock 3.6.0 pyhd3eb1b0_0 n&quot;, &quot;flake8 3.9.2 pyhd3eb1b0_0 n&quot;, &quot;flask 1.1.2 pyhd3eb1b0_0 n&quot;, &quot;fonttools 4.25.0 pyhd3eb1b0_0 n&quot;, &quot;freetype 2.11.0 hd8bbffd_0 n&quot;, &quot;frozenlist 1.2.0 py39hca72f7f_0 n&quot;, &quot;fsspec 2022.2.0 pyhd3eb1b0_0 n&quot;, &quot;future 0.18.2 py39hecd8cb5_1 n&quot;, &quot;gensim 4.1.2 py39he9d5cce_0 n&quot;, &quot;giflib 5.2.1 haf1e3a3_0 n&quot;, &quot;glob2 0.7 pyhd3eb1b0_0 n&quot;, &quot;gmp 6.2.1 h23ab428_2 n&quot;, &quot;gmpy2 2.1.2 py39hd5de756_0 n&quot;, &quot;google-api-core 1.25.1 pyhd3eb1b0_0 n&quot;, &quot;google-auth 1.33.0 pyhd3eb1b0_0 n&quot;, &quot;google-cloud-core 1.7.1 pyhd3eb1b0_0 n&quot;, &quot;google-cloud-storage 1.31.0 py_0 n&quot;, &quot;google-crc32c 1.1.2 py39h9ed2024_0 n&quot;, &quot;google-resumable-media 1.3.1 pyhd3eb1b0_1 n&quot;, &quot;googleapis-common-protos 1.53.0 py39hecd8cb5_0 n&quot;, &quot;greenlet 1.1.1 py39h23ab428_0 n&quot;, &quot;grpcio 1.42.0 py39ha29bfda_0 n&quot;, &quot;h5py 3.6.0 py39h4a1dd59_0 n&quot;, &quot;hdf5 1.10.6 hdbbcd12_0 n&quot;, &quot;heapdict 1.0.1 pyhd3eb1b0_0 n&quot;, &quot;holoviews 1.14.8 pyhd3eb1b0_0 n&quot;, &quot;hvplot 0.7.3 pyhd3eb1b0_1 n&quot;, &quot;hyperlink 21.0.0 pyhd3eb1b0_0 n&quot;, &quot;icu 58.2 h0a44026_3 n&quot;, &quot;idna 3.3 pyhd3eb1b0_0 n&quot;, &quot;imagecodecs 2021.8.26 py39ha952a84_0 n&quot;, &quot;imageio 2.9.0 pyhd3eb1b0_0 n&quot;, &quot;imagesize 1.3.0 pyhd3eb1b0_0 n&quot;, &quot;importlib-metadata 4.11.3 py39hecd8cb5_0 n&quot;, &quot;importlib_metadata 4.11.3 hd3eb1b0_0 n&quot;, &quot;incremental 21.3.0 pyhd3eb1b0_0 n&quot;, &quot;inflection 0.5.1 py39hecd8cb5_0 n&quot;, &quot;iniconfig 1.1.1 pyhd3eb1b0_0 n&quot;, &quot;intake 0.6.5 pyhd3eb1b0_0 n&quot;, &quot;intel-openmp 2021.4.0 hecd8cb5_3538 n&quot;, &quot;intervaltree 3.1.0 pyhd3eb1b0_0 n&quot;, &quot;ipykernel 6.9.1 py39hecd8cb5_0 n&quot;, &quot;ipython 8.2.0 py39hecd8cb5_0 n&quot;, &quot;ipython_genutils 0.2.0 pyhd3eb1b0_1 n&quot;, &quot;ipywidgets 7.6.5 pyhd3eb1b0_1 n&quot;, &quot;isort 5.9.3 pyhd3eb1b0_0 n&quot;, &quot;itemadapter 0.3.0 pyhd3eb1b0_0 n&quot;, &quot;itemloaders 1.0.4 pyhd3eb1b0_1 n&quot;, &quot;itsdangerous 2.0.1 pyhd3eb1b0_0 n&quot;, &quot;jdcal 1.4.1 pyhd3eb1b0_0 n&quot;, &quot;jedi 0.18.1 py39hecd8cb5_1 n&quot;, &quot;jinja2 2.11.3 pyhd3eb1b0_0 n&quot;, &quot;jinja2-time 0.2.0 pyhd3eb1b0_3 n&quot;, &quot;jmespath 0.10.0 pyhd3eb1b0_0 n&quot;, &quot;joblib 1.1.0 pyhd3eb1b0_0 n&quot;, &quot;jpeg 9e hca72f7f_0 n&quot;, &quot;jq 1.6 h9ed2024_1000 n&quot;, &quot;json5 0.9.6 pyhd3eb1b0_0 n&quot;, &quot;jsonschema 4.4.0 py39hecd8cb5_0 n&quot;, &quot;jupyter 1.0.0 py39hecd8cb5_7 n&quot;, &quot;jupyter_client 6.1.12 pyhd3eb1b0_0 n&quot;, &quot;jupyter_console 6.4.0 pyhd3eb1b0_0 n&quot;, &quot;jupyter_core 4.9.2 py39hecd8cb5_0 n&quot;, &quot;jupyter_server 1.13.5 pyhd3eb1b0_0 n&quot;, &quot;jupyterlab 3.3.2 pyhd3eb1b0_0 n&quot;, &quot;jupyterlab_pygments 0.1.2 py_0 n&quot;, &quot;jupyterlab_server 2.10.3 pyhd3eb1b0_1 n&quot;, &quot;jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 n&quot;, &quot;jxrlib 1.1 haf1e3a3_2 n&quot;, &quot;keyring 23.4.0 py39hecd8cb5_0 n&quot;, &quot;kiwisolver 1.3.2 py39he9d5cce_0 n&quot;, &quot;krb5 1.19.2 hcd88c3b_0 n&quot;, &quot;lazy-object-proxy 1.6.0 py39h9ed2024_0 n&quot;, &quot;lcms2 2.12 hf1fd2bf_0 n&quot;, &quot;lerc 3.0 he9d5cce_0 n&quot;, &quot;libaec 1.0.4 hb1e8313_1 n&quot;, &quot;libarchive 3.4.2 haa3ed63_0 n&quot;, &quot;libcrc32c 1.1.1 hb1e8313_2 n&quot;, &quot;libcurl 7.82.0 h6dfd666_0 n&quot;, &quot;libcxx 12.0.0 h2f01273_0 n&quot;, &quot;libdeflate 1.8 h9ed2024_5 n&quot;, &quot;libedit 3.1.20210910 hca72f7f_0 n&quot;, &quot;libev 4.33 h9ed2024_1 n&quot;, &quot;libffi 3.3 hb1e8313_2 n&quot;, &quot;libgfortran 3.0.1 h93005f0_2 n&quot;, &quot;libiconv 1.16 hca72f7f_2 n&quot;, &quot;libidn2 2.3.2 h9ed2024_0 n&quot;, &quot;liblief 0.11.5 he9d5cce_1 n&quot;, &quot;libllvm11 11.1.0 h46f1229_1 n&quot;, &quot;libnghttp2 1.46.0 ha29bfda_0 n&quot;, &quot;libpng 1.6.37 ha441bb4_0 n&quot;, &quot;libprotobuf 3.19.1 h8346a28_0 n&quot;, &quot;libsodium 1.0.18 h1de35cc_0 n&quot;, &quot;libspatialindex 1.9.3 h23ab428_0 n&quot;, &quot;libssh2 1.10.0 h0a4fc7d_0 n&quot;, &quot;libtiff 4.2.0 h87d7836_0 n&quot;, &quot;libunistring 0.9.10 h9ed2024_0 n&quot;, &quot;libwebp 1.2.2 h56c3ce4_0 n&quot;, &quot;libwebp-base 1.2.2 hca72f7f_0 n&quot;, &quot;libxml2 2.9.12 hcdb78fc_0 n&quot;, &quot;libxslt 1.1.34 h83b36ba_0 n&quot;, &quot;libzopfli 1.0.3 hb1e8313_0 n&quot;, &quot;llvm-openmp 12.0.0 h0dcd299_1 n&quot;, &quot;llvmlite 0.38.0 py39h8346a28_0 n&quot;, &quot;locket 0.2.1 py39hecd8cb5_2 n&quot;, &quot;lxml 4.8.0 py39h65b224f_0 n&quot;, &quot;lz4-c 1.9.3 h23ab428_1 n&quot;, &quot;lzo 2.10 haf1e3a3_2 n&quot;, &quot;markdown 3.3.4 py39hecd8cb5_0 n&quot;, &quot;markupsafe 2.0.1 py39h9ed2024_0 n&quot;, &quot;matplotlib 3.5.1 py39hecd8cb5_1 n&quot;, &quot;matplotlib-base 3.5.1 py39hfb0c5b7_1 n&quot;, &quot;matplotlib-inline 0.1.2 pyhd3eb1b0_2 n&quot;, &quot;mccabe 0.6.1 py39hecd8cb5_1 n&quot;, &quot;mistune 0.8.4 py39h9ed2024_1000 n&quot;, &quot;mkl 2021.4.0 hecd8cb5_637 n&quot;, &quot;mkl-service 2.4.0 py39h9ed2024_0 n&quot;, &quot;mkl_fft 1.3.1 py39h4ab4a9b_0 n&quot;, &quot;mkl_random 1.2.2 py39hb2f4e1b_0 n&quot;, &quot;mock 4.0.3 pyhd3eb1b0_0 n&quot;, &quot;mpc 1.1.0 h6ef4df4_1 n&quot;, &quot;mpfr 4.0.2 h9066e36_1 n&quot;, &quot;mpi 1.0 mpich n&quot;, &quot;mpich 3.3.2 hc856adb_0 n&quot;, &quot;mpmath 1.2.1 py39hecd8cb5_0 n&quot;, &quot;msgpack-python 1.0.2 py39hf7b0b51_1 n&quot;, &quot;multidict 5.2.0 py39hca72f7f_2 n&quot;, &quot;multipledispatch 0.6.0 py39hecd8cb5_0 n&quot;, &quot;munkres 1.1.4 py_0 n&quot;, &quot;mypy_extensions 0.4.3 py39hecd8cb5_1 n&quot;, &quot;navigator-updater 0.2.1 py39_1 n&quot;, &quot;nbclassic 0.3.5 pyhd3eb1b0_0 n&quot;, &quot;nbclient 0.5.13 py39hecd8cb5_0 n&quot;, &quot;nbconvert 6.4.4 py39hecd8cb5_0 n&quot;, &quot;nbformat 5.3.0 py39hecd8cb5_0 n&quot;, &quot;ncurses 6.3 hca72f7f_2 n&quot;, &quot;nest-asyncio 1.5.5 py39hecd8cb5_0 n&quot;, &quot;networkx 2.7.1 pyhd3eb1b0_0 n&quot;, &quot;nltk 3.7 pyhd3eb1b0_0 n&quot;, &quot;nodejs 10.13.0 h0a44026_0 n&quot;, &quot;nose 1.3.7 pyhd3eb1b0_1008 n&quot;, &quot;notebook 6.4.12 pypi_0 pypi n&quot;, &quot;numba 0.55.1 py39hae1ba45_0 n&quot;, &quot;numexpr 2.8.1 py39h2e5f0a9_0 n&quot;, &quot;numpy 1.21.5 py39h2e5f0a9_1 n&quot;, &quot;numpy-base 1.21.5 py39h3b1a694_1 n&quot;, &quot;numpydoc 1.2 pyhd3eb1b0_0 n&quot;, &quot;olefile 0.46 pyhd3eb1b0_0 n&quot;, &quot;oniguruma 6.9.7.1 h9ed2024_0 n&quot;, &quot;openjpeg 2.4.0 h66ea3da_0 n&quot;, &quot;openpyxl 3.0.9 pyhd3eb1b0_0 n&quot;, &quot;openssl 1.1.1n hca72f7f_0 n&quot;, &quot;packaging 21.3 pyhd3eb1b0_0 n&quot;, &quot;pandas 1.4.2 py39he9d5cce_0 n&quot;, &quot;pandocfilters 1.5.0 pyhd3eb1b0_0 n&quot;, &quot;panel 0.13.0 py39hecd8cb5_0 n&quot;, &quot;param 1.12.0 pyhd3eb1b0_0 n&quot;, &quot;parsel 1.6.0 py39hecd8cb5_0 n&quot;, &quot;parso 0.8.3 pyhd3eb1b0_0 n&quot;, &quot;partd 1.2.0 pyhd3eb1b0_1 n&quot;, &quot;pathspec 0.7.0 py_0 n&quot;, &quot;patsy 0.5.2 py39hecd8cb5_1 n&quot;, &quot;pep8 1.7.1 py39hecd8cb5_0 n&quot;, &quot;pexpect 4.8.0 pyhd3eb1b0_3 n&quot;, &quot;pickleshare 0.7.5 pyhd3eb1b0_1003 n&quot;, &quot;pillow 9.0.1 py39hde71d04_0 n&quot;, &quot;pip 21.2.4 py39hecd8cb5_0 n&quot;, &quot;pkginfo 1.8.2 pyhd3eb1b0_0 n&quot;, &quot;plotly 5.6.0 pyhd3eb1b0_0 n&quot;, &quot;pluggy 1.0.0 py39hecd8cb5_1 n&quot;, &quot;poyo 0.5.0 pyhd3eb1b0_0 n&quot;, &quot;prometheus_client 0.13.1 pyhd3eb1b0_0 n&quot;, &quot;prompt-toolkit 3.0.20 pyhd3eb1b0_0 n&quot;, &quot;prompt_toolkit 3.0.20 hd3eb1b0_0 n&quot;, &quot;protego 0.1.16 py_0 n&quot;, &quot;protobuf 3.19.1 py39he9d5cce_0 n&quot;, &quot;psutil 5.8.0 py39h9ed2024_1 n&quot;, &quot;ptyprocess 0.7.0 pyhd3eb1b0_2 n&quot;, &quot;pure_eval 0.2.2 pyhd3eb1b0_0 n&quot;, &quot;py 1.11.0 pyhd3eb1b0_0 n&quot;, &quot;py-lief 0.11.5 py39he9d5cce_1 n&quot;, &quot;pyasn1 0.4.8 pyhd3eb1b0_0 n&quot;, &quot;pyasn1-modules 0.2.8 py_0 n&quot;, &quot;pycodestyle 2.7.0 pyhd3eb1b0_0 n&quot;, &quot;pycosat 0.6.3 py39h9ed2024_0 n&quot;, &quot;pycparser 2.21 pyhd3eb1b0_0 n&quot;, &quot;pyct 0.4.6 py39hecd8cb5_0 n&quot;, &quot;pycurl 7.44.1 py39hbcfaee0_1 n&quot;, &quot;pydispatcher 2.0.5 py39hecd8cb5_2 n&quot;, &quot;pydocstyle 6.1.1 pyhd3eb1b0_0 n&quot;, &quot;pyerfa 2.0.0 py39h9ed2024_0 n&quot;, &quot;pyflakes 2.3.1 pyhd3eb1b0_0 n&quot;, &quot;pygments 2.11.2 pyhd3eb1b0_0 n&quot;, &quot;pyhamcrest 2.0.2 pyhd3eb1b0_2 n&quot;, &quot;pyjwt 2.1.0 py39hecd8cb5_0 n&quot;, &quot;pylint 2.9.6 py39hecd8cb5_1 n&quot;, &quot;pyls-spyder 0.4.0 pyhd3eb1b0_0 n&quot;, &quot;pyodbc 4.0.32 py39he9d5cce_1 n&quot;, &quot;pyopenssl 21.0.0 pyhd3eb1b0_1 n&quot;, &quot;pyparsing 3.0.4 pyhd3eb1b0_0 n&quot;, &quot;pyqt 5.9.2 py39h23ab428_6 n&quot;, &quot;pyrsistent 0.18.0 py39hca72f7f_0 n&quot;, &quot;pysocks 1.7.1 py39hecd8cb5_0 n&quot;, &quot;pytables 3.6.1 py39h648f197_1 n&quot;, &quot;pytest 7.1.1 py39hecd8cb5_0 n&quot;, &quot;python 3.9.12 hdfd78df_0 n&quot;, &quot;python-dateutil 2.8.2 pyhd3eb1b0_0 n&quot;, &quot;python-fastjsonschema 2.15.1 pyhd3eb1b0_0 n&quot;, &quot;python-libarchive-c 2.9 pyhd3eb1b0_1 n&quot;, &quot;python-lsp-black 1.0.0 pyhd3eb1b0_0 n&quot;, &quot;python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 n&quot;, &quot;python-lsp-server 1.2.4 pyhd3eb1b0_0 n&quot;, &quot;python-slugify 5.0.2 pyhd3eb1b0_0 n&quot;, &quot;python-snappy 0.6.0 py39h23ab428_3 n&quot;, &quot;python.app 3 py39hca72f7f_0 n&quot;, &quot;pytz 2021.3 pyhd3eb1b0_0 n&quot;, &quot;pyviz_comms 2.0.2 pyhd3eb1b0_0 n&quot;, &quot;pywavelets 1.3.0 py39hca72f7f_0 n&quot;, &quot;pyyaml 6.0 py39hca72f7f_1 n&quot;, &quot;pyzmq 22.3.0 py39he9d5cce_2 n&quot;, &quot;qdarkstyle 3.0.2 pyhd3eb1b0_0 n&quot;, &quot;qstylizer 0.1.10 pyhd3eb1b0_0 n&quot;, &quot;qt 5.9.7 h468cd18_1 n&quot;, &quot;qtawesome 1.0.3 pyhd3eb1b0_0 n&quot;, &quot;qtconsole 5.3.0 pyhd3eb1b0_0 n&quot;, &quot;qtpy 2.0.1 pyhd3eb1b0_0 n&quot;, &quot;queuelib 1.5.0 py39hecd8cb5_0 n&quot;, &quot;readline 8.1.2 hca72f7f_1 n&quot;, &quot;regex 2022.3.15 py39hca72f7f_0 n&quot;, &quot;requests 2.27.1 pyhd3eb1b0_0 n&quot;, &quot;requests-file 1.5.1 pyhd3eb1b0_0 n&quot;, &quot;ripgrep 12.1.1 0 n&quot;, &quot;rope 0.22.0 pyhd3eb1b0_0 n&quot;, &quot;rsa 4.7.2 pyhd3eb1b0_1 n&quot;, &quot;rtree 0.9.7 py39hecd8cb5_1 n&quot;, &quot;ruamel_yaml 0.15.100 py39h9ed2024_0 n&quot;, &quot;s3transfer 0.5.0 pyhd3eb1b0_0 n&quot;, &quot;scikit-image 0.19.2 py39hae1ba45_0 n&quot;, &quot;scikit-learn 1.0.2 py39hae1ba45_1 n&quot;, &quot;scikit-learn-intelex 2021.5.0 py39hecd8cb5_0 n&quot;, &quot;scipy 1.7.3 py39h8c7af03_0 n&quot;, &quot;scrapy 2.6.1 py39hecd8cb5_0 n&quot;, &quot;seaborn 0.11.2 pyhd3eb1b0_0 n&quot;, &quot;send2trash 1.8.0 pyhd3eb1b0_1 n&quot;, &quot;service_identity 18.1.0 pyhd3eb1b0_1 n&quot;, &quot;setuptools 61.2.0 py39hecd8cb5_0 n&quot;, &quot;sip 4.19.13 py39h23ab428_0 n&quot;, &quot;six 1.16.0 pyhd3eb1b0_1 n&quot;, &quot;smart_open 5.1.0 pyhd3eb1b0_0 n&quot;, &quot;snappy 1.1.9 he9d5cce_0 n&quot;, &quot;sniffio 1.2.0 py39hecd8cb5_1 n&quot;, &quot;snowballstemmer 2.2.0 pyhd3eb1b0_0 n&quot;, &quot;sortedcollections 2.1.0 pyhd3eb1b0_0 n&quot;, &quot;sortedcontainers 2.4.0 pyhd3eb1b0_0 n&quot;, &quot;soupsieve 2.3.1 pyhd3eb1b0_0 n&quot;, &quot;sphinx 4.4.0 pyhd3eb1b0_0 n&quot;, &quot;sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 n&quot;, &quot;sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 n&quot;, &quot;sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 n&quot;, &quot;sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 n&quot;, &quot;sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 n&quot;, &quot;sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 n&quot;, &quot;spyder 5.1.5 py39hecd8cb5_1 n&quot;, &quot;spyder-kernels 2.1.3 py39hecd8cb5_0 n&quot;, &quot;sqlalchemy 1.4.32 py39hca72f7f_0 n&quot;, &quot;sqlite 3.38.2 h707629a_0 n&quot;, &quot;stack_data 0.2.0 pyhd3eb1b0_0 n&quot;, &quot;statsmodels 0.13.2 py39hca72f7f_0 n&quot;, &quot;sympy 1.10.1 py39hecd8cb5_0 n&quot;, &quot;tabulate 0.8.9 py39hecd8cb5_0 n&quot;, &quot;tbb 2021.5.0 haf03e11_0 n&quot;, &quot;tbb4py 2021.5.0 py39haf03e11_0 n&quot;, &quot;tblib 1.7.0 pyhd3eb1b0_0 n&quot;, &quot;tenacity 8.0.1 py39hecd8cb5_0 n&quot;, &quot;terminado 0.13.1 py39hecd8cb5_0 n&quot;, &quot;testpath 0.5.0 pyhd3eb1b0_0 n&quot;, &quot;text-unidecode 1.3 pyhd3eb1b0_0 n&quot;, &quot;textdistance 4.2.1 pyhd3eb1b0_0 n&quot;, &quot;threadpoolctl 2.2.0 pyh0d69192_0 n&quot;, &quot;three-merge 0.1.1 pyhd3eb1b0_0 n&quot;, &quot;tifffile 2021.7.2 pyhd3eb1b0_2 n&quot;, &quot;tinycss 0.4 pyhd3eb1b0_1002 n&quot;, &quot;tk 8.6.11 h7bc2e8c_0 n&quot;, &quot;tldextract 3.2.0 pyhd3eb1b0_0 n&quot;, &quot;toml 0.10.2 pyhd3eb1b0_0 n&quot;, &quot;tomli 1.2.2 pyhd3eb1b0_0 n&quot;, &quot;toolz 0.11.2 pyhd3eb1b0_0 n&quot;, &quot;tornado 6.1 py39h9ed2024_0 n&quot;, &quot;tqdm 4.64.0 py39hecd8cb5_0 n&quot;, &quot;traitlets 5.1.1 pyhd3eb1b0_0 n&quot;, &quot;twisted 22.2.0 py39hca72f7f_0 n&quot;, &quot;typed-ast 1.4.3 py39h9ed2024_1 n&quot;, &quot;typing-extensions 4.1.1 hd3eb1b0_0 n&quot;, &quot;typing_extensions 4.1.1 pyh06a4308_0 n&quot;, &quot;tzdata 2022a hda174b7_0 n&quot;, &quot;ujson 5.1.0 py39he9d5cce_0 n&quot;, &quot;unidecode 1.2.0 pyhd3eb1b0_0 n&quot;, &quot;unixodbc 2.3.9 haf1e3a3_0 n&quot;, &quot;urllib3 1.26.9 py39hecd8cb5_0 n&quot;, &quot;w3lib 1.21.0 pyhd3eb1b0_0 n&quot;, &quot;watchdog 2.1.6 py39h999c104_0 n&quot;, &quot;wcwidth 0.2.5 pyhd3eb1b0_0 n&quot;, &quot;webencodings 0.5.1 py39hecd8cb5_1 n&quot;, &quot;websocket-client 0.58.0 py39hecd8cb5_4 n&quot;, &quot;werkzeug 2.0.3 pyhd3eb1b0_0 n&quot;, &quot;wget 1.21.3 h6dfd666_0 n&quot;, &quot;wheel 0.37.1 pyhd3eb1b0_0 n&quot;, &quot;widgetsnbextension 3.5.2 py39hecd8cb5_0 n&quot;, &quot;wrapt 1.12.1 py39h9ed2024_1 n&quot;, &quot;wurlitzer 3.0.2 py39hecd8cb5_0 n&quot;, &quot;xarray 0.20.1 pyhd3eb1b0_1 n&quot;, &quot;xlrd 2.0.1 pyhd3eb1b0_0 n&quot;, &quot;xlsxwriter 3.0.3 pyhd3eb1b0_0 n&quot;, &quot;xlwings 0.24.9 py39hecd8cb5_0 n&quot;, &quot;xz 5.2.5 h1de35cc_0 n&quot;, &quot;yaml 0.2.5 haf1e3a3_0 n&quot;, &quot;yapf 0.31.0 pyhd3eb1b0_0 n&quot;, &quot;yarl 1.6.3 py39h9ed2024_0 n&quot;, &quot;zeromq 4.3.4 h23ab428_0 n&quot;, &quot;zfp 0.5.5 he9d5cce_6 n&quot;, &quot;zict 2.0.0 pyhd3eb1b0_0 n&quot;, &quot;zipp 3.7.0 pyhd3eb1b0_0 n&quot;, &quot;zlib 1.2.12 h4dc903c_2 n&quot;, &quot;zope 1.0 py39hecd8cb5_1 n&quot;, &quot;zope.interface 5.4.0 py39h9ed2024_0 n&quot;, &quot;zstd 1.4.9 h322a384_0 n&quot; ] } ], &quot;source&quot;: [ &quot;echo &quot;Lets check if Java is installed &quot; n&quot;, &quot;java --version n&quot;, &quot; n&quot;, &quot;echo &quot; &quot; n&quot;, &quot;echo &quot;Lets check if Annaconda is installed &quot; n&quot;, &quot;conda list&quot; ] }, { &quot;cell_type&quot;: &quot;markdown&quot;, &quot;metadata&quot;: {}, &quot;source&quot;: [ &quot;# Updating a repository&quot; ] }, { &quot;cell_type&quot;: &quot;code&quot;, &quot;execution_count&quot;: 2, &quot;metadata&quot;: { &quot;vscode&quot;: { &quot;languageId&quot;: &quot;shellscript&quot; } }, &quot;outputs&quot;: [ { &quot;name&quot;: &quot;stdout&quot;, &quot;output_type&quot;: &quot;stream&quot;, &quot;text&quot;: [ &quot;remote: Enumerating objects: 168, done. n&quot;, &quot;remote: Counting objects: 100% (168/168), done. n&quot;, &quot;remote: Compressing objects: 100% (53/53), done. n&quot;, &quot;remote: Total 168 (delta 70), reused 163 (delta 65), pack-reused 0 n&quot;, &quot;Receiving objects: 100% (168/168), 52.67 KiB | 1.10 MiB/s, done. n&quot;, &quot;Resolving deltas: 100% (70/70), completed with 11 local objects. n&quot;, &quot;From https://github.com/ProRichyMan/CSA-Fastpages n&quot;, &quot; 9f5e7f3..c0f83ef gh-pages -&gt; origin/gh-pages n&quot;, &quot;From https://github.com/ProRichyMan/CSA-Fastpages n&quot;, &quot; * branch master -&gt; FETCH_HEAD n&quot;, &quot;Already up to date. n&quot; ] } ], &quot;source&quot;: [ &quot;export repository=CSA-FASTPAGES n&quot;, &quot;export repo_main_folder=vscode n&quot;, &quot;cd $HOME/$repo_main_folder/CSA-FASTPAGES n&quot;, &quot;git fetch origin n&quot;, &quot;git pull origin master&quot; ] }, { &quot;cell_type&quot;: &quot;markdown&quot;, &quot;metadata&quot;: {}, &quot;source&quot;: [ &quot;# Doing some Installations n&quot;, &quot;Automizes some of the installations, specifically git, python, and java!&quot; ] }, { &quot;cell_type&quot;: &quot;code&quot;, &quot;execution_count&quot;: 3, &quot;metadata&quot;: { &quot;vscode&quot;: { &quot;languageId&quot;: &quot;shellscript&quot; } }, &quot;outputs&quot;: [ { &quot;name&quot;: &quot;stdout&quot;, &quot;output_type&quot;: &quot;stream&quot;, &quot;text&quot;: [ &quot; u001b[34m==&gt; u001b[0m u001b[1mFormulae u001b[0m n&quot;, &quot;ca-certificates tgit t topenssl@1.1 treadline txz n&quot;, &quot;gdbm t tmpdecimal tpcre2 t tspring-boot n&quot;, &quot;gettext t topenjdk t tpython@3.10 tsqlite n&quot;, &quot;Updated 1 tap (homebrew/core). n&quot;, &quot; u001b[34m==&gt; u001b[0m u001b[1mNew Formulae u001b[0m n&quot;, &quot;ghorg linux-headers@5.15 shaderc n&quot;, &quot;kalign pymol swiftdraw n&quot;, &quot; u001b[34m==&gt; u001b[0m u001b[1mOutdated Formulae u001b[0m n&quot;, &quot;openjdk n&quot;, &quot; n&quot;, &quot;You have u001b[1m1 u001b[0m outdated formula installed. n&quot;, &quot;You can upgrade it with u001b[1mbrew upgrade u001b[0m n&quot;, &quot;or list it with u001b[1mbrew outdated u001b[0m. n&quot;, &quot; u001b[32m==&gt; u001b[0m u001b[1mUpgrading 1 outdated package: u001b[0m n&quot;, &quot;openjdk 18.0.2 -&gt; 18.0.2.1 n&quot;, &quot; u001b[34m==&gt; u001b[0m u001b[1mDownloading https://ghcr.io/v2/homebrew/core/openjdk/manifests/18.0.2.1 u001b[0m n&quot;, &quot;######################################################################## 100.0% n&quot;, &quot; u001b[34m==&gt; u001b[0m u001b[1mDownloading https://ghcr.io/v2/homebrew/core/openjdk/blobs/sha256:373ac8b65d u001b[0m n&quot;, &quot; u001b[34m==&gt; u001b[0m u001b[1mDownloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sh u001b[0m n&quot;, &quot;######################################################################## 100.0% n&quot;, &quot; u001b[32m==&gt; u001b[0m u001b[1mUpgrading u001b[32mopenjdk u001b[39m n&quot;, &quot; 18.0.2 -&gt; 18.0.2.1 n&quot;, &quot; u001b[0m n&quot;, &quot; u001b[34m==&gt; u001b[0m u001b[1mPouring openjdk--18.0.2.1.arm64_monterey.bottle.tar.gz u001b[0m n&quot;, &quot; u001b[34m==&gt; u001b[0m u001b[1mCaveats u001b[0m n&quot;, &quot;For the system Java wrappers to find this JDK, symlink it with n&quot;, &quot; sudo ln -sfn /opt/homebrew/opt/openjdk/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk.jdk n&quot;, &quot; n&quot;, &quot;openjdk is keg-only, which means it was not symlinked into /opt/homebrew, n&quot;, &quot;because macOS provides similar software and installing this software in n&quot;, &quot;parallel can cause all kinds of trouble. n&quot;, &quot; n&quot;, &quot;If you need to have openjdk first in your PATH, run: n&quot;, &quot; echo &#39;export PATH= &quot;/opt/homebrew/opt/openjdk/bin:$PATH &quot;&#39; &gt;&gt; ~/.zshrc n&quot;, &quot; n&quot;, &quot;For compilers to find openjdk you may need to set: n&quot;, &quot; export CPPFLAGS= &quot;-I/opt/homebrew/opt/openjdk/include &quot; n&quot;, &quot; n&quot;, &quot; u001b[34m==&gt; u001b[0m u001b[1mSummary u001b[0m n&quot;, &quot;🍺 /opt/homebrew/Cellar/openjdk/18.0.2.1: 642 files, 309MB n&quot;, &quot; u001b[34m==&gt; u001b[0m u001b[1mRunning brew cleanup openjdk... u001b[0m n&quot;, &quot;Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP. n&quot;, &quot;Hide these hints with HOMEBREW_NO_ENV_HINTS (see man brew). n&quot;, &quot;Removing: /opt/homebrew/Cellar/openjdk/18.0.2... (642 files, 309MB) n&quot;, &quot;Removing: /Users/nathanmanangan/Library/Caches/Homebrew/openjdk--18.0.2... (180.3MB) n&quot;, &quot; u001b[33mWarning: u001b[0m git 2.37.2 is already installed and up-to-date. n&quot;, &quot;To reinstall 2.37.2, run: n&quot;, &quot; brew reinstall git n&quot;, &quot; u001b[33mWarning: u001b[0m python@3.10 3.10.6_1 is already installed and up-to-date. n&quot;, &quot;To reinstall 3.10.6_1, run: n&quot;, &quot; brew reinstall python@3.10 n&quot;, &quot;Python 3.9.12 n&quot;, &quot; u001b[33mWarning: u001b[0m openjdk 18.0.2.1 is already installed and up-to-date. n&quot;, &quot;To reinstall 18.0.2.1, run: n&quot;, &quot; brew reinstall openjdk n&quot;, &quot;java 18.0.2.1 2022-08-18 n&quot;, &quot;Java(TM) SE Runtime Environment (build 18.0.2.1+1-1) n&quot;, &quot;Java HotSpot(TM) 64-Bit Server VM (build 18.0.2.1+1-1, mixed mode, sharing) n&quot;, &quot;javac 18.0.2.1 n&quot; ] } ], &quot;source&quot;: [ &quot;arch -arm64 brew list n&quot;, &quot;arch -arm64 brew update n&quot;, &quot;arch -arm64 brew upgrade n&quot;, &quot;arch -arm64 brew install git n&quot;, &quot;arch -arm64 brew install python n&quot;, &quot;python --version n&quot;, &quot;arch -arm64 brew install java n&quot;, &quot;java --version n&quot;, &quot;javac --version&quot; ] }, { &quot;cell_type&quot;: &quot;code&quot;, &quot;execution_count&quot;: 4, &quot;metadata&quot;: { &quot;vscode&quot;: { &quot;languageId&quot;: &quot;shellscript&quot; } }, &quot;outputs&quot;: [ { &quot;name&quot;: &quot;stdout&quot;, &quot;output_type&quot;: &quot;stream&quot;, &quot;text&quot;: [ &quot;java 18.0.2.1 2022-08-18 n&quot;, &quot;Java(TM) SE Runtime Environment (build 18.0.2.1+1-1) n&quot;, &quot;Java HotSpot(TM) 64-Bit Server VM (build 18.0.2.1+1-1, mixed mode, sharing) n&quot;, &quot;Python 3.9.12 n&quot;, &quot;javac 18.0.2.1 n&quot;, &quot;v10.13.0 n&quot; ] } ], &quot;source&quot;: [ &quot;java --version n&quot;, &quot;python --version n&quot;, &quot;javac --version n&quot;, &quot;node --version&quot; ] }, { &quot;cell_type&quot;: &quot;markdown&quot;, &quot;metadata&quot;: {}, &quot;source&quot;: [ &quot;Shows all of the kernels installed for Jupyter&quot; ] }, { &quot;cell_type&quot;: &quot;code&quot;, &quot;execution_count&quot;: 5, &quot;metadata&quot;: { &quot;vscode&quot;: { &quot;languageId&quot;: &quot;shellscript&quot; } }, &quot;outputs&quot;: [ { &quot;name&quot;: &quot;stdout&quot;, &quot;output_type&quot;: &quot;stream&quot;, &quot;text&quot;: [ &quot;Available kernels: n&quot;, &quot; python3106jvsc74a57bd0b0fa6594d8f4cbf19f97940f81e996739fb7646882a419484c72d19e05852a7e /Users/nathanmanangan/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python3106jvsc74a57bd0b0fa6594d8f4cbf19f97940f81e996739fb7646882a419484c72d19e05852a7e n&quot;, &quot; python3912jvsc74a57bd063f284042fb87dad5a12beb55d64e6088ab71ccd3f72ccdf84694aa4fa281d07 /Users/nathanmanangan/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python3912jvsc74a57bd063f284042fb87dad5a12beb55d64e6088ab71ccd3f72ccdf84694aa4fa281d07 n&quot;, &quot; bash /Users/nathanmanangan/Library/Jupyter/kernels/bash n&quot;, &quot; java /Users/nathanmanangan/Library/Jupyter/kernels/java n&quot;, &quot; javascript /Users/nathanmanangan/Library/Jupyter/kernels/javascript n&quot;, &quot; python3 /Users/nathanmanangan/opt/anaconda3/share/jupyter/kernels/python3 n&quot; ] } ], &quot;source&quot;: [ &quot;jupyter kernelspec list&quot; ] } ], &quot;metadata&quot;: { &quot;kernelspec&quot;: { &quot;display_name&quot;: &quot;Bash&quot;, &quot;language&quot;: &quot;bash&quot;, &quot;name&quot;: &quot;bash&quot; }, &quot;language_info&quot;: { &quot;codemirror_mode&quot;: &quot;shell&quot;, &quot;file_extension&quot;: &quot;.sh&quot;, &quot;mimetype&quot;: &quot;text/x-sh&quot;, &quot;name&quot;: &quot;bash&quot; }, &quot;orig_nbformat&quot;: 4 }, &quot;nbformat&quot;: 4, &quot;nbformat_minor&quot;: 2 } .",
            "url": "https://nicholasramos5.github.io/VSCodings/2020/08/29/Jupyter.html",
            "relUrl": "/2020/08/29/Jupyter.html",
            "date": " • Aug 29, 2020"
        }
        
    
  
    
        ,"post26": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://nicholasramos5.github.io/VSCodings/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post27": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://nicholasramos5.github.io/VSCodings/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  

  

  
      ,"page3": {
          "title": "PBL",
          "content": "PBL Features . This is where I will have information regarding PBL | .",
          "url": "https://nicholasramos5.github.io/VSCodings/_pages/PBL.html",
          "relUrl": "/_pages/PBL.html",
          "date": ""
      }
      
  

  
      ,"page4": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://nicholasramos5.github.io/VSCodings/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page6": {
          "title": "Notes",
          "content": "Hello my name is Nicholas .",
          "url": "https://nicholasramos5.github.io/VSCodings/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  

  
  

  
      ,"page15": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://nicholasramos5.github.io/VSCodings/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}